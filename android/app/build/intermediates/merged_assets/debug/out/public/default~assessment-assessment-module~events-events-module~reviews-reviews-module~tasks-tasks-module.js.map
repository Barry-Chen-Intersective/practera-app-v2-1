{"version":3,"sources":["./src/app/assessment/assessment.component.html","./src/app/questions/file/file-display/file-display.component.html","./src/app/questions/file/file.component.html","./src/app/questions/multiple/multiple.component.html","./src/app/questions/oneof/oneof.component.html","./src/app/questions/team-member-selector/team-member-selector.component.html","./src/app/questions/text/text.component.html","./src/app/assessment/assessment-routing.module.ts","./src/app/assessment/assessment.component.scss","./src/app/assessment/assessment.component.ts","./src/app/assessment/assessment.module.ts","./src/app/assessment/assessment.service.ts","./src/app/questions/file/file-display/file-display.component.scss","./src/app/questions/file/file-display/file-display.component.ts","./src/app/questions/file/file.component.scss","./src/app/questions/file/file.component.ts","./src/app/questions/multiple/multiple.component.scss","./src/app/questions/multiple/multiple.component.ts","./src/app/questions/oneof/oneof.component.scss","./src/app/questions/oneof/oneof.component.ts","./src/app/questions/questions.component.ts","./src/app/questions/questions.module.ts","./src/app/questions/team-member-selector/team-member-selector.component.scss","./src/app/questions/team-member-selector/team-member-selector.component.ts","./src/app/questions/text/text.component.scss","./src/app/questions/text/text.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,keAAma,8CAA8C,6JAA6J,eAAe,wWAAwW,+FAA+F,2CAA2C,mBAAmB,oSAAoS,6BAA6B,kCAAkC,2DAA2D,yMAAyM,4BAA4B,2LAA2L,2BAA2B,GAAG,iBAAiB,2ZAA2Z,4BAA4B,gYAAgY,cAAc,uaAAua,iBAAiB,qpBAAqpB,45BAA45B,2HAA2H,srBAAsrB,2HAA2H,6rBAA6rB,2HAA2H,wrBAAwrB,2HAA2H,otBAAotB,2HAA2H,uyCAAuyC,gBAAgB,+DAA+D,6a;;;;;;;;;;;;ACAxgT;AAAe,uzBAAwvB,YAAY,uSAAuS,wEAAwE,iTAAiT,iBAAiB,whCAAwhC,qJAAqJ,+IAA+I,2PAA2P,mHAAmH,iBAAiB,iIAAiI,iBAAiB,4WAA4W,iU;;;;;;;;;;;;ACA7nH;AAAe,+yBAAgvB,kBAAkB,6XAA6X,OAAO,2wC;;;;;;;;;;;;ACArpC;AAAe,sOAAuK,+IAA+I,eAAe,ovBAAovB,gPAAgP,eAAe,uRAAuR,kBAAkB,oLAAoL,yIAAyI,eAAe,6XAA6X,OAAO,+TAA+T,yIAAyI,eAAe,+pB;;;;;;;;;;;;ACAvxF;AAAe,6RAA8N,2IAA2I,eAAe,iyBAAiyB,gPAAgP,eAAe,iUAAiU,kBAAkB,gSAAgS,2IAA2I,eAAe,mlBAAmlB,2IAA2I,eAAe,ihB;;;;;;;;;;;;ACAj6F;AAAe,qSAAsO,oJAAoJ,uBAAuB,8hBAA8hB,wPAAwP,uBAAuB,sUAAsU,kBAAkB,wSAAwS,8IAA8I,uBAAuB,0lBAA0lB,8IAA8I,uBAAuB,mgB;;;;;;;;;;;;ACAjvF;AAAe,0LAA2H,qBAAqB,6RAA6R,iBAAiB,+GAA+G,kBAAkB,yYAAyY,OAAO,uxB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAr7B;AACc;AACM;AAE7D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,uCAAuC;QAC7C,SAAS,EAAE,yEAAmB;QAC9B,IAAI,EAAE;YACJ,MAAM,EAAE,YAAY;SACrB;KACF;IACD;QACE,IAAI,EAAE,qCAAqC;QAC3C,SAAS,EAAE,yEAAmB;QAC9B,IAAI,EAAE;YACJ,MAAM,EAAE,QAAQ;SACjB;KACF;IACD;QACE,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,yEAAmB;QAC9B,IAAI,EAAE;YACJ,MAAM,EAAE,YAAY;YACpB,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAMF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAJnC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;;ACjCpC;AAAe,6EAAc,sBAAsB,GAAG,gBAAgB,oBAAoB,GAAG,oBAAoB,+BAA+B,GAAG,yBAAyB,qBAAqB,wBAAwB,GAAG,0BAA0B,qBAAqB,iBAAiB,GAAG,kBAAkB,+BAA+B,GAAG,4BAA4B,qBAAqB,GAAG,wCAAwC,qBAAqB,sBAAsB,GAAG,8BAA8B,uBAAuB,qBAAqB,GAAG,uCAAuC,iBAAiB,8BAA8B,yBAAyB,GAAG,yCAAyC,iBAAiB,gBAAgB,GAAG,2CAA2C,oBAAoB,GAAG,0CAA0C,oBAAoB,yCAAyC,GAAG,6BAA6B,iBAAiB,+BAA+B,GAAG,+BAA+B,iBAAiB,sBAAsB,GAAG,6CAA6C,2mH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5gC;AACZ;AAC4C;AACtD;AACuB;AACZ;AACF;AACL;AACJ;AACM;AACc;AAGP;AAEtE,IAAM,qBAAqB,GAAG,KAAK,CAAC;AAOpC;IAAyC,uCAAW;IAqElD,6BACS,MAAc,EACb,KAAqB,EACrB,iBAAoC,EACrC,KAAmB,EAClB,mBAAwC,EACzC,OAA8B,EAC9B,aAA4B,EAC3B,eAAgC,EAChC,mBAAwC,EACxC,MAAc,EACd,QAAyB;QAXnC,YAaE,kBAAM,MAAM,CAAC,SACd;QAbQ,YAAM,GAAN,MAAM,CAAQ;QACb,WAAK,GAAL,KAAK,CAAgB;QACrB,uBAAiB,GAAjB,iBAAiB,CAAmB;QACrC,WAAK,GAAL,KAAK,CAAc;QAClB,yBAAmB,GAAnB,mBAAmB,CAAqB;QACzC,aAAO,GAAP,OAAO,CAAuB;QAC9B,mBAAa,GAAb,aAAa,CAAe;QAC3B,qBAAe,GAAf,eAAe,CAAiB;QAChC,yBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,YAAM,GAAN,MAAM,CAAQ;QACd,cAAQ,GAAR,QAAQ,CAAiB;QA1E1B,cAAQ,GAAG,EAAE,CAAC;QACb,cAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;QAC9B,kBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAG5C,cAAQ,GAAG,cAAc,CAAC;QAQ1B,gBAAU,GAAe;YACvB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,EAAE;YACV,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,gBAAU,GAAe;YACvB,EAAE,EAAE,CAAC;YACL,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;YAChB,cAAc,EAAE,EAAE;YAClB,YAAY,EAAE,EAAE;SACjB,CAAC;QACF,YAAM,GAAW;YACf,EAAE,EAAE,CAAC;YACL,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;SACb,CAAC;QAMF,qHAAqH;QACrH,gHAAgH;QAChH,kBAAY,GAAG,KAAK,CAAC;QACrB,8GAA8G;QAC9G,8HAA8H;QAC9H,cAAQ,GAAG,KAAK,CAAC;QAEjB,sBAAgB,GAAG,KAAK,CAAC;QACzB,uBAAiB,GAAG,IAAI,CAAC;QACzB,mBAAa,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QAGlC,0BAAoB,GAAG,IAAI,CAAC;;IAoB5B,CAAC;IAED,uDAAuD;IAC/C,uCAAS,GAAjB,UAAkB,SAAS,EAAE,MAAO;QAApC,iBAiCC;QAhCC,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE;YACzB,+CAA+C;YAC/C,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACrB,OAAO,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,6CAA6C;YAC7C,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gBAChD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACrB,OAAQ;aACT;YACD,iDAAiD;YACjD,QAAQ,SAAS,CAAC,CAAC,CAAC,EAAE;gBACpB,KAAK,OAAO;oBACV,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACjB,IAAI,EAAE,OAAO;wBACb,OAAO,EAAE,SAAS,CAAC,CAAC,CAAC;qBACtB,CAAC,CAAC;oBACH,MAAM;gBACR,KAAK,YAAY;oBACf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;wBACjB,IAAI,EAAE,YAAY;wBAClB,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;wBACvB,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC;qBAC3B,CAAC,CAAC;oBACH,MAAM;gBACR;oBACE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;wBACrB,OAAO,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;oBACjD,CAAC,CAAC,CAAC;aACN;SACF;IACH,CAAC;IAEO,yCAAW,GAAnB;QACE,IAAI,CAAC,UAAU,GAAG;YAChB,IAAI,EAAE,EAAE;YACR,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,EAAE;YACV,UAAU,EAAE,KAAK;SAClB,CAAC;QACF,IAAI,CAAC,UAAU,GAAG;YAChB,EAAE,EAAE,CAAC;YACL,MAAM,EAAE,EAAE;YACV,OAAO,EAAE,EAAE;YACX,aAAa,EAAE,EAAE;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,KAAK;YACf,SAAS,EAAE,KAAK;YAChB,cAAc,EAAE,EAAE;YAClB,YAAY,EAAE,EAAE;SACjB,CAAC;QACF,IAAI,CAAC,MAAM,GAAG;YACZ,EAAE,EAAE,CAAC;YACL,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,IAAI,wDAAS,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;IAClC,CAAC;IAED,qCAAO,GAAP;QAAA,iBAqEC;QApEC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;SAChC;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;SAC/C;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;SAC1D;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;SAC/C;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;SACzB;aAAM;YACL,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;SACnD;QACD,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;SACnE;QACD,IAAI,IAAI,CAAC,cAAc,EAAE;YACvB,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;SACjE;QACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;SACvE;QAED,0DAA0D;QAC1D,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC;aAC3G,SAAS,CACR,gBAAM;YACJ,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;YACpC,KAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,iBAAe,KAAI,CAAC,UAAU,CAAC,IAAI,aAAQ,KAAI,CAAC,EAAI,CAAC,CAAC;YACpF,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;YAC9C,kEAAkE;YAClE,IAAI,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,UAAU,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,EAAE;gBACpF,OAAO,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;oBACpC,OAAO,EAAE,kDAAkD;oBAC3D,OAAO,EAAE;wBACP;4BACE,IAAI,EAAE,IAAI;4BACV,IAAI,EAAE,QAAQ;4BACd,OAAO,EAAE;gCACP,IAAI,KAAI,CAAC,UAAU,EAAE;oCACnB,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,UAAU,EAAE,KAAI,CAAC,UAAU,CAAE,CAAC,CAAC;iCACvD;qCAAM;oCACL,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;iCACjC;4BACH,CAAC;yBACF;qBACF;iBACF,CAAC,CAAC;aACJ;YACD,KAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CACF,CAAC;IACN,CAAC;IAEO,mDAAqB,GAA7B,UAA8B,UAAU;QACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,+DAA+D;QAC/D,uFAAuF;QACvF,2FAA2F;QAC3F,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YAC/C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;YAChC,OAAO;SACR;QAED,uDAAuD;QACvD,2BAA2B;QAC3B,uCAAuC;QACvC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,aAAa,EAAE;YACnF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,aAAa,EAAE;gBAC/D,IAAI,CAAC,aAAa,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBACxF,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;aACnC;YACD,OAAO;SACR;QAED,oDAAoD;QACpD,kDAAkD;QAClD,0BAA0B;QAC1B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,gBAAgB,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YAC3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;QAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;IACpD,CAAC;IAEO,+CAAiB,GAAzB,UAA0B,MAAM;QAAhC,iBAoBC;QAnBC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACzD,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gBACpC,OAAO,EAAE,mCAAmC;gBAC5C,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI;wBACV,IAAI,EAAE,QAAQ;wBACd,OAAO,EAAE;4BACL,KAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;wBAClC,CAAC;qBACJ;iBACF;aACF,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,aAAa,EAAE;YACpD,IAAI,CAAC,aAAa,GAAG,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/E,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;SACnC;IACH,CAAC;IAGD,8CAAgB,GAAhB;QACE,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE,CAAC;IACzC,CAAC;IAED;;;OAGG;IACK,wCAAU,GAAlB,UAAmB,QAAQ;QACzB,IAAI,IAAI,GAAG,WAAW,CAAC;QAEvB,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YAC5B,IAAI,GAAG,UAAU,CAAC;SACnB;QAED,OAAO,CAAC,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,gDAAgD;IAChD,0EAA0E;IAC1E,mDAAqB,GAArB;QAAA,iBAeC;QAdC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YAClC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;gBAC9B,0DAA0D;gBAC1D,IAAI,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBAC7B,0CAA0C;oBAC1C,SAAS,GAAG,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;iBACnC;qBAAM;oBACL,SAAS,GAAG,EAAE,CAAC;iBAChB;gBAED,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;YACpF,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,0CAAY,GAAZ;QACE,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAChD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;SAC3C;QACD,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YAC/C,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAE,CAAC,CAAC;SAC9D;QACD,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,kCAAI,GAAJ;QAAA,iBA4BC;QA3BC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QAEnD,IAAI,IAAI,CAAC,MAAM,KAAK,YAAY;eAC3B,IAAI,CAAC,UAAU;eACf,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW;eACtC,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC3B,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gBACpC,MAAM,EAAE,wBAAwB;gBAChC,OAAO,EAAE,8CAA8C;gBACvD,OAAO,EAAE;oBACP;wBACE,IAAI,EAAE,IAAI;wBACV,OAAO,EAAE,cAAM,YAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB;qBACnC;oBACD;wBACE,IAAI,EAAE,KAAK;wBACX,OAAO,EAAE,cAAM,YAAI,CAAC,wBAAwB,EAAE,CAAC,IAAI,CAAC;4BAClD,OAAO,KAAI,CAAC,YAAY,EAAE,CAAC;wBAC7B,CAAC,CAAC,EAFa,CAEb;qBACH;iBACF;aACF,CAAC,CAAC;SACJ;aAAM;YACL,wBAAwB;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAG,IAAI,EAAE,IAAI,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B;IACH,CAAC;IAED;;;;OAIG;IACH,yDAA2B,GAA3B,UAA4B,OAAO;QAAnC,iBAkBC;QAjBC,IAAM,OAAO,GAAG,EAAE,CAAC;QACnB,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,gBAAM;YAC7B,QAAQ,CAAC,MAAM,CAAC,sBAAsB,CAAC,GAAG,MAAM,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;YAClC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAQ;gBAC9B,IAAI,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;oBAC7B,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE;wBACjG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;qBACxB;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;OAEG;IACG,8CAAgB,GAAtB;;;;;6BACM,KAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,WAAW,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAnF,wBAAmF;wBACrF,qBAAM,IAAI,CAAC,wBAAwB,EAAE;;wBAArC,SAAqC,CAAC;;;wBAExC,IAAI,CAAC,YAAY,EAAE,CAAC;;;;;KACrB;IAED;;OAEG;IACH,0CAAY,GAAZ;QAAA,iBAkBC;QAjBC,2DAA2D;QAC3D,4CAA4C;QAC5C,sDAAsD;QACtD,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ;YAC1B,CAAC,IAAI,CAAC,MAAM,KAAK,YAAY,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,EAC5D;YACA,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;SAC5B;QAED,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,wBAAwB,CAAC,CAAC;QACnD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,YAAY,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,kBAAQ;YACrG,KAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,QAAQ,EAAE;gBACZ,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACW,8CAAgB,GAA9B;;;;;;wBACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,iGAAiG;wBACjG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;4BAC/B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;4BAChC,sBAAO;yBACR;;;;wBAEe,qBAAM,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,EAAE;;wBAAxF,KAAK,GAAG,SAAgF;6BAC1F,MAAK,IAAI,KAAK,CAAC,OAAO,GAAtB,wBAAsB;wBACxB,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;wBACtB,qBAAM,KAAK,CAAC,YAAY,EAAE;;wBAA1B,SAA0B,CAAC;;;wBAE7B,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;;;;wBAEhB,qBAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gCACnD,MAAM,EAAE,mCAAmC;gCAC3C,OAAO,EAAE,KAAG,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAG,CAAC;6BACxC,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,KAAG,CAAC,CAAC;;;;;KAExB;IAED;;;;;OAKG;IACG,oCAAM,GAAZ,UAAa,cAAuB,EAAE,MAAgB,EAAE,YAAsB;;;;;gBAE5E;;;;;;;;;;;;mBAYG;gBACH,IAAI,cAAc,EAAE;oBAClB,IAAI,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;wBAChC,IAAI,CAAC,aAAa,GAAG,WAAW,CAAC;wBACjC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;qBAClC;yBAAM;wBACL,sBAAO;qBACR;iBACF;qBAAM;oBACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;gBACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBAEb,OAAO,GAAG,EAAE,CAAC;gBACf,UAAU,GAAG,CAAC,CAAC;gBAGnB,UAAU,GAAG;oBACX,EAAE,EAAE,IAAI,CAAC,EAAE;oBACX,WAAW,EAAE,KAAK;iBACnB,CAAC;gBAEF,0BAA0B;gBAC1B,IAAI,IAAI,CAAC,YAAY,EAAE;oBACrB,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;oBAEvC,IAAI,cAAc,EAAE;wBAClB,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC;qBAC/B;oBACD,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,IAAI,MAAM,EAAE;wBACvC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;qBAC1B;oBACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,UAAC,KAAK,EAAE,GAAG;wBACnD,UAAU,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;wBACpC,IAAI,MAAM,CAAC;wBACX,IAAI,KAAK,EAAE;4BACT,MAAM,GAAG,KAAK,CAAC;yBAChB;6BAAM;4BACL,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,eAAK;gCAClC,IAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAQ;oCACnD,OAAO,QAAQ,CAAC,EAAE,KAAK,UAAU,CAAC;gCACpC,CAAC,CAAC,CAAC;gCACH,IAAI,eAAe,IAAI,eAAe,CAAC,IAAI,KAAK,UAAU,EAAE;oCAC1D,MAAM,GAAG,EAAE,CAAC;iCACb;qCAAM;oCACL,MAAM,GAAG,IAAI,CAAC;iCACf;4BACH,CAAC,CAAC,CAAC;yBACJ;wBACD,OAAO,CAAC,IAAI,CAAC;4BACX,sBAAsB,EAAE,UAAU;4BAClC,MAAM,EAAE,MAAM;yBACf,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;iBACJ;gBAED,wBAAwB;gBACxB,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE;wBACrC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE;wBACzB,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACvD,WAAW,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;qBAC7C,CAAC,CAAC;oBAEH,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,UAAC,MAAM,EAAE,GAAG;wBACpD,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;4BAC/B,MAAM,CAAC,sBAAsB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;4BACvD,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;yBACtB;oBACH,CAAC,CAAC,CAAC;iBACJ;gBAGK,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,CAAC;gBACpE,IAAI,CAAC,cAAc,IAAI,iBAAiB,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnD,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,qDAAqD;oBACrD,sBAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,EAAE;4BACpD,OAAO,EAAE,mCAAmC;yBAC7C,CAAC,EAAC;iBACJ;gBAED,+BAA+B;gBAC/B,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAChC,UAAU,EACV,OAAO,EACP,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACzC,CAAC,SAAS,CACT,gBAAM;oBACJ,IAAI,cAAc,EAAE;wBAClB,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;wBAC5C,gDAAgD;wBAChD,KAAI,CAAC,aAAa,GAAG,aAAa,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;wBAC5D,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;qBACnC;yBAAM;wBACL,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBAClD,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wBACxB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;wBACtB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC;4BACrB,EAAE,EAAE,CAAC,KAAI,CAAC,EAAE;4BACZ,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM;yBACzE,CAAC,CAAC;wBACH,8BAA8B;wBAC9B,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,aAAG,IAAI,YAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAA1C,CAA0C,CAAC,CAAC;wBACpG,OAAO,KAAI,CAAC,gBAAgB,EAAE,CAAC;qBAChC;gBACH,CAAC,EACD,UAAC,GAAkB;oBACjB,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;oBAE/C,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;oBACxB,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,IAAI,cAAc,EAAE;wBAClB,6CAA6C;wBAC7C,KAAI,CAAC,aAAa,GAAG,uBAAuB,CAAC;qBAC9C;yBAAM;wBACL,wCAAwC;wBACxC,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;4BAC7B,MAAM,EAAE,mBAAmB;4BAC3B,OAAO,EAAE,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;4BACvC,OAAO,EAAE;gCACP;oCACE,IAAI,EAAE,IAAI;oCACV,IAAI,EAAE,QAAQ;iCACf;6BACF;yBACF,CAAC,CAAC;wBACH,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;qBACjD;gBACH,CAAC,CACF,CAAC;gBACF,gFAAgF;gBAChF,IAAI,cAAc,IAAI,YAAY,EAAE;oBAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;iBACrB;gBACD,sEAAsE;gBACtE,UAAU,CAAC,cAAM,YAAI,CAAC,MAAM,GAAG,KAAK,EAAnB,CAAmB,EAAE,qBAAqB,CAAC,CAAC;;;;KAC9D;IAED;;OAEG;IACG,sDAAwB,GAA9B;;;;;;wBACE,iDAAiD;wBACjD,IAAI,IAAI,CAAC,gBAAgB,EAAE;4BACzB,sBAAO;yBACR;wBACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAE/B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,mCAAmC,CAAC,CAAC;;;;wBAGnD,qBAAM,IAAI,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE;;wBAA1F,MAAM,GAAG,SAAiF,CAAC;wBAC3F,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;wBAC7B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,uBAAuB,CAAC,CAAC;wBAClD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;;;;wBAEhB,qBAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gCACnD,MAAM,EAAE,iCAAiC;gCACzC,OAAO,EAAE,KAAG,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAG,CAAC;6BACxC,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,KAAG,CAAC,CAAC;;wBAGvB,+DAA+D;wBAC/D,wDAAwD;wBACxD,wFAAwF;wBACxF,IAAI,CAAC,MAAM,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,eAAe,EAAE;4BAC9D,sBAAO;yBACR;wBACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;wBAC/B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,yCAAyC,CAAC,CAAC;;;;wBAElE,8BAA8B;wBAC9B,qBAAM,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,KAAK,CAAC;;wBADrE,8BAA8B;wBAC9B,SAAqE,CAAC;wBACtE,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;;;;wBAE1B,GAAG,GAAG,uCAAuC,CAAC;wBACpD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;wBACf,qBAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC;gCACnD,MAAM,EAAE,GAAG;gCACX,OAAO,EAAE,KAAG,CAAC,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,KAAG,CAAC;6BACxC,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;wBAChC,MAAM,IAAI,KAAK,CAAC,KAAG,CAAC,CAAC;;;;;KAExB;IAED,8CAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QAChD,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,cAAc,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;IAClE,CAAC;IAEO,6CAAe,GAAvB;QACE,OAAO,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;YACtC,MAAM,EAAE,IAAI;YACZ,IAAI,EAAE,SAAS;YACf,MAAM,EAAE,SAAS;SAClB,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;IACxB,CAAC;IAED,uCAAS,GAAT;QACE,OAAO,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;IACjE,CAAC;IAED;;;OAGG;IACH,wCAAU,GAAV;QACE,yCAAyC;QACzC,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,QAAQ,EAAE;YACtC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,OAAO,YAAY,CAAC;aACrB;YACD,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,OAAO,WAAW,CAAC;aACpB;YACD,+DAA+D;YAC/D,OAAO,KAAK,CAAC;SACd;QACD,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YAC5B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,KAAK,CAAC;SACd;QACD,QAAQ,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC9B,KAAK,WAAW;gBACd,IAAI,IAAI,CAAC,gBAAgB,EAAE;oBACzB,OAAO,MAAM,CAAC;iBACf;gBACD,OAAO,oBAAoB,CAAC;YAC9B,KAAK,kBAAkB;gBACrB,OAAO,gBAAgB,CAAC;YAC1B;gBACE,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SACjC;IACH,CAAC;;gBA9oBgB,sDAAM;gBACN,8DAAc;gBACF,qEAAiB;gBAC9B,oEAAY;gBACG,6FAAmB;gBAChC,+EAAqB;gBACf,sEAAa;gBACV,0EAAe;gBACX,yFAAmB;gBAChC,oDAAM;gBACJ,oFAAe;;IA/E1B;QAAR,2DAAK,EAAE;;wDAAiB;IAChB;QAAR,2DAAK,EAAE;;gEAAyB;IACxB;QAAR,2DAAK,EAAE;;kEAA2B;IAC1B;QAAR,2DAAK,EAAE;;+DAAwB;IACvB;QAAR,2DAAK,EAAE;;4DAAqB;IACpB;QAAR,2DAAK,EAAE;;yDAAe;IACb;QAAT,4DAAM,EAAE;;yDAA+B;IAC9B;QAAT,4DAAM,EAAE;;6DAAmC;IARjC,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,4LAAwC;;SAEzC,CAAC;yCAuEiB,sDAAM;YACN,8DAAc;YACF,qEAAiB;YAC9B,oEAAY;YACG,6FAAmB;YAChC,+EAAqB;YACf,sEAAa;YACV,0EAAe;YACX,yFAAmB;YAChC,oDAAM;YACJ,oFAAe;OAhFxB,mBAAmB,CAstB/B;IAAD,0BAAC;CAAA,CAttBwC,0EAAW,GAstBnD;AAttB+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBqB;AAEZ;AAC6B;AACjB;AAEQ;AACG;AACH;AAoB7D;IAAA;IACA,CAAC;IADY,gBAAgB;QAlB5B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAY;gBACZ,kFAAuB;gBACvB,kEAAmB;gBACnB,2EAAe;gBACf,wEAAc;aACf;YACD,YAAY,EAAE;gBACZ,yEAAmB;aACpB;YACD,OAAO,EAAE;gBACP,kEAAY;gBACZ,wEAAc;gBACd,yEAAmB;aACpB;SACF,CAAC;OAEW,gBAAgB,CAC5B;IAAD,uBAAC;CAAA;AAD4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5Bc;AACL;AACD;AAC4B;AACV;AACW;AACc;AACC;AACxB;AAEzD;;;;GAIG;AACH,IAAM,GAAG,GAAG;IACV,IAAI,EAAE;QACJ,WAAW,EAAE,iCAAiC;QAC9C,OAAO,EAAE,+BAA+B;QACxC,QAAQ,EAAE,wCAAwC;KACnD;CACF,CAAC;AA+EF;IAGE,2BACU,OAAuB,EACvB,KAAmB,EACnB,OAA8B,EAC9B,YAAiC,EAClC,SAAuB;QAJtB,YAAO,GAAP,OAAO,CAAgB;QACvB,UAAK,GAAL,KAAK,CAAc;QACnB,YAAO,GAAP,OAAO,CAAuB;QAC9B,iBAAY,GAAZ,YAAY,CAAqB;QAClC,cAAS,GAAT,SAAS,CAAc;QAPhC,cAAS,GAAG,EAAE,CAAC;IAQZ,CAAC;IAEJ,yCAAa,GAAb,UAAc,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,YAAa;QAA9D,iBA4CC;QA3CC,OAAO,IAAI,CAAC,OAAO,CAAC,WAAW,CAC7B,IAAI,CAAC,KAAK,CAAC,2BAA2B,CACpC,+BACiB,GAAG,EAAE,GAAG,YAAY,GAAG,CAAC,MAAM,KAAK,QAAQ,CAAC,GAAG,cAAc,GAAG,UAAU,GAAG,wdAc7E,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,GAAG,SAAS,CAAC,GAAG,gcAiBpF,CAAC,CACL;aACA,IAAI,CAAC,0DAAG,CAAC,aAAG;YACX,OAAO;gBACL,UAAU,EAAE,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;gBACvD,UAAU,EAAE,KAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC;gBAC/C,MAAM,EAAE,KAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;aAChD,CAAC;QACJ,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAEO,gDAAoB,GAA5B,UAA6B,IAAI,EAAE,MAAM;QAAzC,iBAiFC;QAhFC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO,IAAI,CAAC;SACb;QACD,IAAM,UAAU,GAAG;YACjB,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YAC1B,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI;YAC1B,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,WAAW;YACxC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM;YACjC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO;YAChC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK;YACjG,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU;YACtC,MAAM,EAAE,EAAE;SACX,CAAC;QACF,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAS;YACtC,IAAM,SAAS,GAAe,EAAE,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;gBACxB,OAAO;aACR;YACD,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,sBAAY;gBACtC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC;gBAC/C,IAAM,QAAQ,GAAa;oBACzB,EAAE,EAAE,YAAY,CAAC,EAAE;oBACnB,IAAI,EAAE,YAAY,CAAC,IAAI;oBACvB,IAAI,EAAE,YAAY,CAAC,IAAI;oBACvB,WAAW,EAAE,YAAY,CAAC,WAAW;oBACrC,UAAU,EAAE,YAAY,CAAC,UAAU;oBACnC,UAAU,EAAE,YAAY,CAAC,UAAU;oBACnC,SAAS,EAAE,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC;oBACzH,QAAQ,EAAE,YAAY,CAAC,QAAQ;oBAC/B,aAAa,EAAE,YAAY,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAChG,YAAY,EAAE,YAAY,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;iBAC/F,CAAC;gBACF,QAAQ,YAAY,CAAC,IAAI,EAAE;oBACzB,KAAK,OAAO,CAAC;oBACb,KAAK,UAAU;wBACb,IAAM,SAAO,GAAa,EAAE,CAAC;wBAC7B,IAAI,MAAI,GAAG,EAAE,CAAC;wBACd,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAU;4BACrC,SAAO,CAAC,IAAI,CAAC;gCACX,EAAE,EAAE,UAAU,CAAC,EAAE;gCACjB,IAAI,EAAE,UAAU,CAAC,IAAI;gCACrB,WAAW,EAAE,UAAU,CAAC,WAAW,IAAI,IAAI;6BAC5C,CAAC,CAAC;4BACH,IAAI,UAAU,CAAC,WAAW,EAAE;gCAC1B,MAAI,IAAI,KAAK,GAAG,UAAU,CAAC,IAAI,GAAG,KAAK,GAAG,UAAU,CAAC,WAAW,GAAG,MAAM,CAAC;6BAC3E;wBACH,CAAC,CAAC,CAAC;wBACH,IAAI,MAAI,EAAE;4BACR,gBAAgB;4BAChB,MAAI,GAAG,8BAA8B,GAAG,MAAI,CAAC;yBAC9C;wBACD,QAAQ,CAAC,IAAI,GAAG,MAAI,CAAC;wBACrB,QAAQ,CAAC,OAAO,GAAG,SAAO,CAAC;wBAC3B,MAAM;oBAER,KAAK,MAAM;wBACT,QAAQ,CAAC,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC;wBAC1C,MAAM;oBAER,KAAK,sBAAsB;wBACzB,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC;wBAC1B,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC,wBAAc;4BAC7C,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;gCACxB,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC;gCACnC,QAAQ,EAAE,cAAc,CAAC,QAAQ;6BAClC,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;wBACH,MAAM;iBACT;gBACD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAClC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC;oBACrB,IAAI,EAAE,SAAS,CAAC,IAAI;oBACpB,WAAW,EAAE,SAAS,CAAC,WAAW;oBAClC,SAAS,EAAE,SAAS;iBACrB,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,gDAAoB,GAA5B,UAA6B,IAAI;QAAjC,iBA0BC;QAzBC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,wBAAwB,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7F,OAAO,IAAI,CAAC;SACb;QACD,IAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,UAAU,GAAe;YAC3B,EAAE,EAAE,eAAe,CAAC,EAAE;YACtB,MAAM,EAAE,eAAe,CAAC,MAAM;YAC9B,aAAa,EAAE,eAAe,CAAC,SAAS,CAAC,IAAI;YAC7C,cAAc,EAAE,eAAe,CAAC,SAAS,CAAC,KAAK;YAC/C,QAAQ,EAAE,eAAe,CAAC,QAAQ;YAClC,QAAQ,EAAE,eAAe,CAAC,MAAM;YAChC,SAAS,EAAE,eAAe,CAAC,SAAS;YACpC,YAAY,EAAE,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;YACjG,OAAO,EAAE,EAAE;SACZ,CAAC;QACF,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAU;YACxC,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;YACpF,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG;gBAC1C,MAAM,EAAE,UAAU,CAAC,MAAM;aAC1B,CAAC;YACF,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;gBACrD,UAAU,GAAG,KAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;aACjE;QACH,CAAC,CAAC,CAAC;QACH,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,IAAI,EAAE,MAAM;QAArC,iBA8BC;QA7BC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,wBAAwB,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YAC7F,OAAO,IAAI,CAAC;SACb;QACD,IAAM,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACvD,IAAM,qBAAqB,GAAG,eAAe,CAAC,MAAM,CAAC;QACrD,IAAI,CAAC,qBAAqB,EAAE;YAC1B,OAAO,IAAI,CAAC;SACb;QACD,IAAM,MAAM,GAAW;YACrB,EAAE,EAAE,qBAAqB,CAAC,EAAE;YAC5B,MAAM,EAAE,qBAAqB,CAAC,MAAM;YACpC,QAAQ,EAAE,qBAAqB,CAAC,QAAQ;YACxC,OAAO,EAAE,EAAE;SACZ,CAAC;QAEF,qGAAqG;QACrG,2FAA2F;QAC3F,IAAI,eAAe,CAAC,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,YAAY,EAAE;YACrE,OAAO,MAAM,CAAC;SACf;QAED,qBAAqB,CAAC,OAAO,CAAC,OAAO,CAAC,oBAAU;YAC9C,UAAU,CAAC,MAAM,GAAG,KAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,UAAU,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;YACpF,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,GAAG;gBACtC,MAAM,EAAE,UAAU,CAAC,MAAM;gBACzB,OAAO,EAAE,UAAU,CAAC,OAAO;aAC5B,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACK,iDAAqB,GAA7B,UAA8B,gBAAgB,EAAE,UAAsB;QAAtE,iBAiCC;QAhCC,IAAM,UAAU,GAAG,gBAAgB,CAAC,UAAU,CAAC;QAC/C,IAAM,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC;QACvC,0CAA0C;QAC1C,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,EAAE;YAC1D,OAAO,UAAU,CAAC;SACnB;QACD,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACzB,oBAAoB;YACpB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;gBAC/C,kDAAkD;gBAClD,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;oBACzE,WAAW,IAAI,MAAM,CAAC,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;iBAChE;YACH,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,iBAAiB;YACjB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAM;gBAC/C,kDAAkD;gBAClD,IAAI,MAAM,KAAK,MAAM,CAAC,EAAE,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;oBACnE,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;iBAClC;YACH,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,WAAW,EAAE;YAChB,OAAO,UAAU,CAAC;SACnB;QACD,wCAAwC;QACxC,IAAM,eAAe,GAAG,WAAW,CAAC,OAAO,CAAC,uBAAuB,EAAE,iDAAiD,CAAC,CAAC;QACxH,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC;QAErG,OAAO,UAAU,CAAC;IACpB,CAAC;IAEO,4CAAgB,GAAxB,UAAyB,UAAU,EAAE,MAAM;QACzC,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,EAAE;YAC9B,QAAQ,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;gBACvC,KAAK,OAAO;oBACV,yCAAyC;oBACzC,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;wBACrD,sGAAsG;wBACtG,MAAM,GAAG,IAAI,CAAC;qBACf;yBAAM;wBACL,MAAM,GAAG,CAAC,MAAM,CAAC;qBAClB;oBACD,MAAM;gBACR,KAAK,UAAU;oBACb,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBAC9B,MAAM,GAAG,EAAE,CAAC;qBACb;oBACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBAC1B,iCAAiC;wBACjC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;qBAC7B;oBACD,yCAAyC;oBACzC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,eAAK;wBACvB,OAAO,CAAC,KAAK,CAAC;oBAChB,CAAC,CAAC,CAAC;oBACH,MAAM;aACT;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,uCAAW,GAAX,UAAY,UAAgC,EAAE,OAAe,EAAE,MAAc,EAAE,YAAqB;QAClG,IAAI,QAAQ,CAAC;QACb,QAAQ,MAAM,EAAE;YACd,KAAK,YAAY;gBACf,QAAQ,GAAG;oBACT,UAAU,EAAE,UAAU;oBACtB,0BAA0B,EAAE,OAAO;iBACpC,CAAC;gBACF,IAAI,YAAY,EAAE;oBAChB,QAAQ,CAAC,oBAAoB,GAAG;wBAC9B,EAAE,EAAE,YAAY;qBACjB,CAAC;iBACH;gBACD,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;YAE3D,KAAK,QAAQ;gBACX,QAAQ,GAAG;oBACT,UAAU,EAAE,UAAU;oBACtB,sBAAsB,EAAE,OAAO;iBAChC,CAAC;gBACF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SACxD;QACD,OAAO,+CAAE,CAAC;YACR,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,YAAY;QAC/B,IAAM,QAAQ,GAAG;YACf,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,SAAS;YAC5C,UAAU,EAAE,uBAAuB,GAAG,YAAY;YAClD,OAAO,EAAE,IAAI;SACd,CAAC;QACF,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,6CAAiB,GAAjB,UAAkB,QAAQ,EAAE,QAAQ;QAClC,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,4FAAqB,EAAE;YACpD,QAAQ;YACR,QAAQ;SACT,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,QAAQ;QACpB,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QACD,OAAO,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9E,CAAC;;gBAxTkB,8EAAc;gBAChB,oEAAY;gBACV,+EAAqB;gBAChB,6FAAmB;gBACvB,sEAAY;;IARrB,iBAAiB;QAJ7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAMmB,8EAAc;YAChB,oEAAY;YACV,+EAAqB;YAChB,6FAAmB;YACvB,sEAAY;OARrB,iBAAiB,CA8T7B;IAAD,wBAAC;CAAA;AA9T6B;;;;;;;;;;;;;ACpG9B;AAAe,uEAAQ,gBAAgB,GAAG,cAAc,qBAAqB,oBAAoB,wBAAwB,GAAG,mBAAmB,iCAAiC,0BAA0B,qBAAqB,GAAG,4BAA4B,oBAAoB,GAAG,6CAA6C,uBAAuB,GAAG,sDAAsD,oBAAoB,GAAG,4BAA4B,wBAAwB,4BAA4B,qBAAqB,GAAG,6CAA6C,mhE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9b;AACzD;AAChB;AACC;AAOxD;IAWE,8BAAoB,gBAAkC,EAAU,KAAmB;QAA/D,qBAAgB,GAAhB,gBAAgB,CAAkB;QAAU,UAAK,GAAL,KAAK,CAAc;QAP1E,aAAQ,GAAG,KAAK,CAAC;QAIhB,eAAU,GAAuB,IAAI,0DAAY,EAAE,CAAC;IAGyB,CAAC;IAExF,uCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACpC,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC7B;IACH,CAAC;IAED,mDAAoB,GAApB,UAAqB,IAAK;QAA1B,iBAwBC;QAvBC,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,sDAAsD;QACtD,IAAI,CAAC,qEAAW,CAAC,UAAU,EAAE;YAC3B,OAAQ;SACT;QACD,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,kBAAQ;YAC1E,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,aAAG;gBAC3B,yBAAO,EAAE,mBAAM,CAAS;gBAEhC,IAAI,MAAM,CAAC,WAAW,EAAE,KAAK,UAAU,EAAE,EAAE,gCAAgC;oBACjE,6CAAe,EAAE,+BAAU,CAAa;oBAEhD,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,cAAc,CAAC,IAAI,eAAe,IAAI,eAAe,CAAC,IAAI,EAAE;wBACtF,KAAI,CAAC,cAAc,GAAG,eAAe,CAAC,IAAI,CAAC;qBAC5C;oBAED,IAAI,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAI,CAAC,UAAU,CAAC,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,EAAE;wBACxE,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC;qBACnC;iBACF;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,4CAAa,GAArB;QACE,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SACpC;IACH,CAAC;IAED,0CAAW,GAAX,UAAY,MAAqB;QAC/B,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YACjF,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACrD;IACH,CAAC;IAEK,0CAAW,GAAjB,UAAkB,IAAI;;;;;;;wBAEX,qBAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,IAAI,CAAC;4BAApD,sBAAO,SAA6C,EAAC;;;wBAErD,sBAAO,KAAG,EAAC;;;;;KAEd;IAED,iDAAkB,GAAlB;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;gBA1DqC,oFAAgB;gBAAiB,oEAAY;;IAP1E;QAAR,2DAAK,EAAE;;0DAAkB;IACjB;QAAR,2DAAK,EAAE;;sDAAW;IACV;QAAR,2DAAK,EAAE;;iEAA2B;IACZ;QAAtB,+DAAS,CAAC,UAAU,CAAC;kCAAW,wDAAU;0DAAC;IAClC;QAAT,4DAAM,EAAE;kCAAc,0DAAY;4DAA2B;IACrD;QAAR,2DAAK,EAAE;;0DAAoB;IATjB,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,iNAA0C;;SAE3C,CAAC;yCAYsC,oFAAgB,EAAiB,oEAAY;OAXxE,oBAAoB,CAuEhC;IAAD,2BAAC;CAAA;AAvEgC;;;;;;;;;;;;;ACVjC;AAAe,6GAA8C,uJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqD;AAC5B;AACf;AAcvE;IAoCE,uBACU,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAnCnC,aAAQ,GAAG;YAClB,IAAI,EAAE,EAAE;YACR,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,KAAK;YACjB,QAAQ,EAAE,KAAK;SAChB,CAAC;QAiBF,6BAA6B;QACnB,iBAAY,GAAG,IAAI,0DAAY,EAAW,CAAC;QAGrD,cAAS,GAAG,EAAE,CAAC;QAKf,0BAA0B;QAC1B,WAAM,GAAe,EAAE,CAAC;QAWxB,0CAA0C;QAC1C,oBAAe,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;IAR9B,CAAC;sBAtCO,aAAa;IAwCxB,gCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAC5E,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAKD,6CAAqB,GAArB,UAAsB,IAAI,EAAE,IAAW;QAAX,kCAAW;QACrC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,eAAe;YACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,0DAA0D;YAC1D,+EAA+E;YAC/E,wCAAwC;YACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC;YAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;SACzB;aAAM;YACL,iCAAiC;YACjC,wHAAwH;YACxH,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAI,IAAI,CAAC,IAAI,CAAC,OAAO,wBAAqB,CAAC,CAAC;aAC7D;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6CAA6C,CAAC,CAAC;aACjE;SACF;IACH,CAAC;IAED,2HAA2H;IAC3H,qHAAqH;IACrH,gCAAQ,GAAR,UAAS,KAAK,EAAE,IAAI;QAClB,wCAAwC;QACxC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG;oBAChB,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,EAAE;iBACZ,CAAC;aACH;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,oEAAoE;gBACpE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;aAC5C;SACF;aAAM;YACL,mEAAmE;YACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;SACrC;QAED,2EAA2E;QAC3E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAsC;IACtC,kCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,sCAAsC;IACtC,wCAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAsC;IACtC,yCAAiB,GAAjB,UAAkB,EAAO;IAEzB,CAAC;IAED,qCAAqC;IAC7B,yCAAiB,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,GAAG;gBAChB,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,EAAE;aACZ,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAC7C;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SAC1C;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED,wCAAgB,GAAhB,UAAiB,IAAI;QACnB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1B,CAAC;;;gBAjG2B,oFAAgB;;IAnCnC;QAAR,2DAAK,EAAE;;mDAKN;IACO;QAAR,2DAAK,EAAE;;qDAAY;IACX;QAAR,2DAAK,EAAE;;iDAAQ;IAEP;QAAR,2DAAK,EAAE;;uDAAc;IAEb;QAAR,2DAAK,EAAE;;2DAAkB;IAEjB;QAAR,2DAAK,EAAE;kCAAe,OAAO;uDAAC;IAEtB;QAAR,2DAAK,EAAE;kCAAW,OAAO;mDAAC;IAElB;QAAR,2DAAK,EAAE;kCAAU,0DAAW;kDAAC;IAET;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAY,wDAAU;oDAAC;IAElB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,wDAAU;qDAAC;IAEtC;QAAT,4DAAM,EAAE;;uDAA4C;IAzB1C,aAAa;QAZzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oLAAkC;YAElC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,KAAK,EAAE,IAAI;oBACX,WAAW,EAAE,gEAAU,CAAC,cAAM,sBAAa,EAAb,CAAa,CAAC;iBAC7C;aACF;;SACF,CAAC;yCAsC4B,oFAAgB;OArCjC,aAAa,CAwIzB;IAAD,oBAAC;CAAA;AAxIyB;;;;;;;;;;;;;AChB1B;AAAe,oFAAqB,0BAA0B,GAAG,6CAA6C,ujB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAI;AAC5B;AAC/B;AAcvD;IA4BE,2BACU,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;QAV7B,6BAA6B;QACnB,iBAAY,GAAG,IAAI,0DAAY,EAAW,CAAC;QAKrD,0BAA0B;QAC1B,WAAM,GAAe,EAAE,CAAC;QAUxB,0CAA0C;QAC1C,oBAAe,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;IAP9B,CAAC;0BA9BO,iBAAiB;IAgC5B,oCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAKD,0IAA0I;IAC1I,qHAAqH;IACrH,oCAAQ,GAAR,UAAS,KAAK,EAAE,IAAI;QAClB,2EAA2E;QAC3E,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;YACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC/C;QACD,wCAAwC;QACxC,IAAI,IAAI,EAAE;YACR,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG;oBAChB,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,EAAE;iBACZ,CAAC;aACH;YACD,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,oEAAoE;gBACpE,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC;aACjC;iBAAM;gBACL,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAChF;SACF;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;aACtB;YACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;SAClE;QAED,2EAA2E;QAC3E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,eAAe;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,6HAA6H;QAC7H,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrC,IAAI,GAAG,KAAK,UAAU,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;aAC/C;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5C;SACF;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAsC;IACtC,sCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACzC;IACH,CAAC;IAED,sCAAsC;IACtC,4CAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAsC;IACtC,6CAAiB,GAAjB,UAAkB,EAAO;IAEzB,CAAC;IACD,qCAAqC;IAC7B,6CAAiB,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,GAAG;gBAChB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;gBAC1B,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO;aAC7B,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;SACpC;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SAC1C;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;;;gBArFgB,oEAAY;;IA3BpB;QAAR,2DAAK,EAAE;;uDAAU;IACT;QAAR,2DAAK,EAAE;;yDAAY;IACX;QAAR,2DAAK,EAAE;;qDAAQ;IAEP;QAAR,2DAAK,EAAE;;2DAAc;IAEb;QAAR,2DAAK,EAAE;;+DAAkB;IAEjB;QAAR,2DAAK,EAAE;kCAAe,OAAO;2DAAC;IAEtB;QAAR,2DAAK,EAAE;kCAAW,OAAO;uDAAC;IAElB;QAAR,2DAAK,EAAE;kCAAU,0DAAW;sDAAC;IAET;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAY,wDAAU;wDAAC;IAElB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,wDAAU;yDAAC;IAEtC;QAAT,4DAAM,EAAE;;2DAA4C;IApB1C,iBAAiB;QAZ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,gMAAsC;YAEtC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,KAAK,EAAE,IAAI;oBACX,WAAW,EAAE,gEAAU,CAAC,cAAM,0BAAiB,EAAjB,CAAiB,CAAC;iBACjD;aACF;;SACF,CAAC;yCA8BiB,oEAAY;OA7BlB,iBAAiB,CAoH7B;IAAD,wBAAC;CAAA;AApH6B;;;;;;;;;;;;;AChB9B;AAAe,oGAAqC,0BAA0B,GAAG,6CAA6C,+kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ;AAC5B;AAC/B;AAcvD;IA4BE,wBAAoB,KAAmB;QAAnB,UAAK,GAAL,KAAK,CAAc;QATvC,6BAA6B;QACnB,iBAAY,GAAG,IAAI,0DAAY,EAAW,CAAC;QAKrD,0BAA0B;QAC1B,WAAM,GAAe,EAAE,CAAC;QAOxB,0CAA0C;QAC1C,oBAAe,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;IANS,CAAC;uBA5BhC,cAAc;IA8BzB,iCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAID,4HAA4H;IAC5H,qHAAqH;IACrH,iCAAQ,GAAR,UAAS,KAAK,EAAE,IAAI;QAClB,wCAAwC;QACxC,IAAI,IAAI,EAAE;YACR,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG;oBAChB,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,EAAE;iBACZ,CAAC;aACH;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QAED,2EAA2E;QAC3E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,eAAe;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,6HAA6H;QAC7H,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrC,IAAI,GAAG,KAAK,UAAU,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;aAC/C;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5C;SACF;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAsC;IACtC,mCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,sCAAsC;IACtC,yCAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAsC;IACtC,0CAAiB,GAAjB,UAAkB,EAAO;IAEzB,CAAC;IAED,qCAAqC;IAC7B,0CAAiB,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,GAAG;gBAChB,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,EAAE;aACZ,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAC7C;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SAC1C;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;;;gBA1E0B,oEAAY;;IA1B9B;QAAR,2DAAK,EAAE;;oDAAU;IACT;QAAR,2DAAK,EAAE;;sDAAY;IACX;QAAR,2DAAK,EAAE;;kDAAQ;IAEP;QAAR,2DAAK,EAAE;;wDAAc;IAEb;QAAR,2DAAK,EAAE;;4DAAkB;IAEjB;QAAR,2DAAK,EAAE;kCAAe,OAAO;wDAAC;IAEtB;QAAR,2DAAK,EAAE;kCAAW,OAAO;oDAAC;IAElB;QAAR,2DAAK,EAAE;kCAAU,0DAAW;mDAAC;IAEN;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;qDAAC;IAErB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,wDAAU;sDAAC;IAEtC;QAAT,4DAAM,EAAE;;wDAA4C;IApB1C,cAAc;QAZ1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uLAAmC;YAEnC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,KAAK,EAAE,IAAI;oBACX,WAAW,EAAE,gEAAU,CAAC,cAAM,uBAAc,EAAd,CAAc,CAAC;iBAC9C;aACF;;SACF,CAAC;yCA6B2B,oEAAY;OA5B5B,cAAc,CAwG1B;IAAD,qBAAC;CAAA;AAxG0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB8B;AAOzD;IAEE;IACG,CAAC;IAEJ,qCAAQ,GAAR;IACA,CAAC;IANU,kBAAkB;QAJ9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,yCAAyC;SACpD,CAAC;;OACW,kBAAkB,CAS9B;IAAD,yBAAC;CAAA;AAT8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNU;AACY;AACM;AACL;AACG;AACS;AACZ;AAC8C;AAClB;AACb;AACd;AA0BvD;IAAA;IACA,CAAC;IADY,eAAe;QAxB3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAmB;gBACnB,kFAAe;gBACf,mEAAY;aACb;YACD,YAAY,EAAE;gBACZ,uEAAkB;gBAClB,kEAAa;gBACb,qEAAc;gBACd,8EAAiB;gBACjB,kEAAa;gBACb,gHAA2B;gBAC3B,8FAAoB;aACrB;YACD,OAAO,EAAE;gBACP,kEAAa;gBACb,qEAAc;gBACd,8EAAiB;gBACjB,kEAAa;gBACb,gHAA2B;aAC5B;SAEF,CAAC;OACW,eAAe,CAC3B;IAAD,sBAAC;CAAA;AAD2B;;;;;;;;;;;;;ACrC5B;AAAe,oGAAqC,0BAA0B,GAAG,6CAA6C,msB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ;AAC5B;AActF;IA4BE;QATA,6BAA6B;QACnB,iBAAY,GAAG,IAAI,0DAAY,EAAW,CAAC;QAKrD,0BAA0B;QAC1B,WAAM,GAAe,EAAE,CAAC;QAOxB,0CAA0C;QAC1C,oBAAe,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;IANlB,CAAC;oCA5BL,2BAA2B;IA8BtC,8CAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAID,4HAA4H;IAC5H,qHAAqH;IACrH,8CAAQ,GAAR,UAAS,KAAK,EAAE,IAAI;QAClB,wCAAwC;QACxC,IAAI,IAAI,EAAE;YACR,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG;oBAChB,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,EAAE;iBACZ,CAAC;aACH;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;SAC/B;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;QAED,2EAA2E;QAC3E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,eAAe;QACf,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,6HAA6H;QAC7H,KAAK,IAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YACrC,IAAI,GAAG,KAAK,UAAU,EAAE;gBACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;aAC/C;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;aAC5C;SACF;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAsC;IACtC,gDAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,sCAAsC;IACtC,sDAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAsC;IACtC,uDAAiB,GAAjB,UAAkB,EAAO;IAEzB,CAAC;IAED,qCAAqC;IAC7B,uDAAiB,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,GAAG;gBAChB,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,EAAE;aACZ,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAC7C;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SAC1C;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;;IApGQ;QAAR,2DAAK,EAAE;;iEAAU;IACT;QAAR,2DAAK,EAAE;;mEAAY;IACX;QAAR,2DAAK,EAAE;;+DAAQ;IAEP;QAAR,2DAAK,EAAE;;qEAAc;IAEb;QAAR,2DAAK,EAAE;;yEAAkB;IAEjB;QAAR,2DAAK,EAAE;kCAAe,OAAO;qEAAC;IAEtB;QAAR,2DAAK,EAAE;kCAAW,OAAO;iEAAC;IAElB;QAAR,2DAAK,EAAE;kCAAU,0DAAW;gEAAC;IAEN;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;kEAAC;IAErB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,wDAAU;mEAAC;IAEtC;QAAT,4DAAM,EAAE;;qEAA4C;IApB1C,2BAA2B;QAZvC,+DAAS,CAAC;YACT,QAAQ,EAAE,0BAA0B;YACpC,oOAAkD;YAElD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,KAAK,EAAE,IAAI;oBACX,WAAW,EAAE,gEAAU,CAAC,cAAM,oCAA2B,EAA3B,CAA2B,CAAC;iBAC3D;aACF;;SACF,CAAC;;OACW,2BAA2B,CAuGvC;IAAD,kCAAC;CAAA;AAvGuC;;;;;;;;;;;;;ACfxC;AAAe,8EAAe,sBAAsB,uBAAuB,GAAG,6CAA6C,2kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAT;AAC5B;AActF;IA6BE;QAVA,6BAA6B;QACnB,iBAAY,GAAG,IAAI,0DAAY,EAAW,CAAC;QAIrD,WAAM,GAAG,EAAE,CAAC;QAEZ,0BAA0B;QAC1B,WAAM,GAAe,EAAE,CAAC;QAQxB,0CAA0C;QAC1C,oBAAe,GAAG,UAAC,CAAM,IAAM,CAAC,CAAC;IAPlB,CAAC;sBA7BL,aAAa;IA+BxB,gCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAKD,kCAAkC;IAClC,+BAAO,GAAP,UAAQ,KAAK;QACX,IAAM,UAAU,GAAG,0BAA0B,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC/E,IAAI,UAAU,EAAE;YACd,IAAM,QAAQ,GAAwB,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC;YAC9D,IAAM,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC;YACpC,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC/B,QAAQ,CAAC,KAAK,GAAG,GAAG,CAAC;gBACrB,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACzE,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;aACrB;iBAAM;gBACL,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACzE,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;gBACpB,QAAQ,CAAC,KAAK,GAAG,YAAY,CAAC;aAC/B;SACF;IACH,CAAC;IAGD,0IAA0I;IAC1I,qHAAqH;IACrH,gCAAQ,GAAR,UAAS,IAAW;QAAX,kCAAW;QAClB,wCAAwC;QACxC,IAAI,IAAI,EAAE;YACR,mCAAmC;YACnC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG;oBAChB,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,EAAE;iBACZ,CAAC;aACH;YACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC;SAC/B;QAED,2EAA2E;QAC3E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,aAAa;QACb,8DAA8D;QAC9D,kFAAkF;QAClF,OAAQ;QACR,eAAe;QACf,oBAAoB;QACpB,6HAA6H;QAC7H,2CAA2C;QAC3C,8BAA8B;QAC9B,qDAAqD;QACrD,aAAa;QACb,kDAAkD;QAClD,MAAM;QACN,IAAI;IACN,CAAC;IAED,sCAAsC;IACtC,kCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;SACzB;IACH,CAAC;IAED,sCAAsC;IACtC,wCAAgB,GAAhB,UAAiB,EAAO;QACtB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,sCAAsC;IACtC,yCAAiB,GAAjB,UAAkB,EAAO;IAEzB,CAAC;IAED,qCAAqC;IAC7B,yCAAiB,GAAzB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC5D,IAAI,CAAC,UAAU,GAAG;gBAChB,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,EAAE;aACZ,CAAC;YACF,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YAC9C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;YACnC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAClC;QACD,IAAI,CAAC,IAAI,CAAC,gBAAgB,KAAK,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;YACpE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YACzC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;SACtC;QACD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;;IAhIQ;QAAR,2DAAK,EAAE;;mDAAU;IACT;QAAR,2DAAK,EAAE;;qDAAY;IACX;QAAR,2DAAK,EAAE;;iDAAQ;IAEP;QAAR,2DAAK,EAAE;;uDAAc;IAEb;QAAR,2DAAK,EAAE;;2DAAkB;IAEjB;QAAR,2DAAK,EAAE;kCAAe,OAAO;uDAAC;IAEtB;QAAR,2DAAK,EAAE;kCAAW,OAAO;mDAAC;IAElB;QAAR,2DAAK,EAAE;kCAAU,0DAAW;kDAAC;IAEN;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;oDAAC;IAErB;QAAxB,+DAAS,CAAC,YAAY,CAAC;kCAAa,wDAAU;qDAAC;IAEtC;QAAT,4DAAM,EAAE;;uDAA4C;IApB1C,aAAa;QAZzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oLAAkC;YAElC,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,gEAAiB;oBAC1B,KAAK,EAAE,IAAI;oBACX,WAAW,EAAE,gEAAU,CAAC,cAAM,sBAAa,EAAb,CAAa,CAAC;iBAC7C;aACF;;SACF,CAAC;;OACW,aAAa,CAsIzB;IAAD,oBAAC;CAAA;AAtIyB","file":"default~assessment-assessment-module~events-events-module~reviews-reviews-module~tasks-tasks-module.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar class=\\\"ion-toolbar-absolute\\\">\\n    <ion-buttons slot=\\\"start\\\" *ngIf=\\\"utils.isMobile()\\\">\\n      <ion-button (click)=\\\"back()\\\" id=\\\"btn-back\\\">\\n        <ion-icon class=\\\"icon-backward ion-margin-start\\\" name=\\\"arrow-back\\\" color=\\\"primary\\\" slot=\\\"icon-only\\\" ></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n\\n    <ion-title class=\\\"ion-text-center\\\" [ngClass]=\\\"{\\n      'subtitle-2': !utils.isMobile()\\n    }\\\">Assessment</ion-title>\\n    <ng-container *ngIf=\\\"doAssessment || doReview\\\">\\n      <div class=\\\"ion-text-center sub-title caption gray-2 saving-msg\\\">{{savingMessage}}</div>\\n      <ion-button [disabled]=\\\"savingButtonDisabled || submitted\\\" (click)=\\\"submit(true, false, true)\\\" class=\\\"text-button subtitle-1\\\" color=\\\"primary\\\" slot=\\\"end\\\" fill=\\\"clear\\\" size=\\\"small\\\">Save</ion-button>\\n    </ng-container>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"ion-padding ion-text-center\\\" color=\\\"light\\\" [ngClass]=\\\"{\\n  'ion-content-absolute-with-footer': hasFooter(),\\n  'ion-content-absolute': !hasFooter()\\n}\\\" appFloat>\\n  <h1 class=\\\"headline-4\\\">{{ assessment.name }}</h1>\\n  <ion-text class=\\\"ion-text-left\\\">\\n    <app-description *ngIf=\\\"assessment.description\\\" [content]=\\\"assessment.description\\\" id=\\\"asmt-des\\\" class=\\\"body-1 black\\\"></app-description>\\n  </ion-text>\\n  <p class=\\\"due-date assessment subtitle-1 gray-2 ion-text-center\\\" [ngClass]=\\\"{'over': assessment.isOverdue}\\\" *ngIf=\\\"doAssessment\\\">\\n    {{ this.sharedService.dueDateFormatter(assessment.dueDate) }}\\n  </p>\\n  <div *ngIf=\\\"!doAssessment && submission && submission.submitterName && !submission.isLocked\\\" class=\\\"review-submitter ion-text-left\\\">\\n    <p class=\\\"subtitle-1\\\">\\n      Submitted by {{ submission.submitterName }}\\n    </p>\\n  </div>\\n  <div *ngIf=\\\"submission && submission.reviewerName && review\\\" class=\\\"review-submitter ion-text-left\\\">\\n    <p class=\\\"subtitle-1 gray-3\\\">\\n      Reviewed by {{ submission.reviewerName }} {{ review.status }}\\n    </p>\\n  </div>\\n\\n  <ion-list *ngIf=\\\"submission && submission.isLocked\\\" class=\\\"member-detail-container no-bg\\\" lines=\\\"none\\\">\\n    <ion-item lines=\\\"none\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img [src]=\\\"submission.submitterImage ? submission.submitterImage : 'https://my.practera.com/img/user-512.png'\\\">\\n      </ion-avatar>\\n      <ion-label>\\n        <p class=\\\"subtitle-1\\\">Locked by {{ submission.submitterName }}</p>\\n        <p class=\\\"caption gray-2\\\">Please wait until the user finishes editing</p>\\n      </ion-label>\\n    </ion-item>\\n  </ion-list>\\n\\n  <form [formGroup]=\\\"questionsForm\\\">\\n    <ng-container *ngIf=\\\"loadingAssessment\\\">\\n      <ion-spinner></ion-spinner>\\n    </ng-container>\\n    <ng-container *ngFor=\\\"let group of assessment.groups\\\">\\n      <h3 class=\\\"headline-6\\\">{{ group.name }}</h3>\\n      <ion-text color=\\\"dark\\\" class=\\\"ion-text-left\\\">\\n        <app-description class=\\\"g-description\\\" *ngIf=\\\"group.description\\\" [content]=\\\"group.description\\\"></app-description>\\n      </ion-text>\\n      <ng-container *ngFor=\\\"let question of group.questions\\\">\\n        <ion-card class=\\\"practera-card question-card ion-text-left\\\">\\n          <ion-card-header class=\\\"q-title body-2 black\\\">\\n            {{ question.name }}\\n            <ion-text class=\\\"required-indicator\\\" color=\\\"danger\\\" *ngIf=\\\"question.isRequired\\\">*</ion-text>\\n            <ion-icon *ngIf=\\\"question.info\\\" color=\\\"primary\\\" class=\\\"icon-info vertical-middle\\\" (click)=\\\"showQuestionInfo(question.info)\\\" name=\\\"information-circle-outline\\\"></ion-icon>\\n            <ion-text color=\\\"dark\\\" class=\\\"paragraph ion-text-left\\\">\\n              <app-description class=\\\"q-description\\\" *ngIf=\\\"question.description\\\" [content]=\\\"question.description\\\"></app-description>\\n            </ion-text>\\n          </ion-card-header>\\n          <div class=\\\"ion-text-center ion-margin-bottom\\\" *ngIf=\\\"loadingAssessment; else submissionTpl\\\">\\n            <ion-spinner></ion-spinner>\\n          </div>\\n          <ng-template #submissionTpl>\\n            <ion-card-content [ngSwitch]=\\\"question.type\\\" class=\\\"q-content ion-margin-top ion-padding-horizontal\\\" color=\\\"light\\\">\\n              <p><i *ngIf=\\\"!doAssessment &&\\n                (\\n                  (!question.reviewerOnly && submission && !submission.answers[question.id]) ||\\n                  (!doReview && question.reviewerOnly && review && !review.answers[question.id])\\n                )\\\"\\n                >No Answer Submitted</i></p>\\n\\n              <app-text\\n                *ngSwitchCase=\\\"'text'\\\"\\n                [question]=\\\"question\\\"\\n                [doAssessment]=\\\"doAssessment\\\"\\n                [doReview]=\\\"doReview\\\"\\n                [submission]=\\\"(submission && submission.answers && submission.answers[question.id]) ? submission.answers[question.id] : {}\\\"\\n                [review]=\\\"(review && review.answers && review.answers[question.id]) ? review.answers[question.id] : {}\\\"\\n                [reviewStatus]=\\\"review ? review.status : ''\\\"\\n                [submissionStatus]=\\\"submission ? submission.status : ''\\\"\\n                [formControlName]=\\\"'q-' + question.id\\\"\\n                [control]=\\\"questionsForm.controls['q-' + question.id]\\\"\\n                (saveProgress)=\\\"submit(true)\\\"\\n              ></app-text>\\n\\n              <app-oneof\\n                *ngSwitchCase=\\\"'oneof'\\\"\\n                [question]=\\\"question\\\"\\n                [doAssessment]=\\\"doAssessment\\\"\\n                [doReview]=\\\"doReview\\\"\\n                [submission]=\\\"(submission && submission.answers && submission.answers[question.id]) ? submission.answers[question.id] : {}\\\"\\n                [review]=\\\"(review && review.answers && review.answers[question.id]) ? review.answers[question.id] : {}\\\"\\n                [reviewStatus]=\\\"review ? review.status : ''\\\"\\n                [submissionStatus]=\\\"submission ? submission.status : ''\\\"\\n                [formControlName]=\\\"'q-' + question.id\\\"\\n                [control]=\\\"questionsForm.controls['q-' + question.id]\\\"\\n                (saveProgress)=\\\"submit(true)\\\"\\n              ></app-oneof>\\n\\n              <app-multiple\\n                *ngSwitchCase=\\\"'multiple'\\\"\\n                [question]=\\\"question\\\"\\n                [doAssessment]=\\\"doAssessment\\\"\\n                [doReview]=\\\"doReview\\\"\\n                [submission]=\\\"(submission && submission.answers && submission.answers[question.id]) ? submission.answers[question.id] : {}\\\"\\n                [review]=\\\"(review && review.answers && review.answers[question.id]) ? review.answers[question.id] : {}\\\"\\n                [reviewStatus]=\\\"review ? review.status : ''\\\"\\n                [submissionStatus]=\\\"submission ? submission.status : ''\\\"\\n                [formControlName]=\\\"'q-' + question.id\\\"\\n                [control]=\\\"questionsForm.controls['q-' + question.id]\\\"\\n                (saveProgress)=\\\"submit(true)\\\"\\n              ></app-multiple>\\n\\n              <app-file\\n                *ngSwitchCase=\\\"'file'\\\"\\n                [question]=\\\"question\\\"\\n                [doAssessment]=\\\"doAssessment\\\"\\n                [doReview]=\\\"doReview\\\"\\n                [submission]=\\\"(submission && submission.answers && submission.answers[question.id]) ? submission.answers[question.id] : {}\\\"\\n                [review]=\\\"(review && review.answers && review.answers[question.id]) ? review.answers[question.id] : {}\\\"\\n                [reviewStatus]=\\\"review ? review.status : ''\\\"\\n                [submissionStatus]=\\\"submission ? submission.status : ''\\\"\\n                [formControlName]=\\\"'q-' + question.id\\\"\\n                [control]=\\\"questionsForm.controls['q-' + question.id]\\\"\\n                (saveProgress)=\\\"submit(true)\\\"\\n              ></app-file>\\n\\n              <app-team-member-selector\\n                *ngSwitchCase=\\\"'team member selector'\\\"\\n                [question]=\\\"question\\\"\\n                [doAssessment]=\\\"doAssessment\\\"\\n                [doReview]=\\\"doReview\\\"\\n                [submission]=\\\"(submission && submission.answers && submission.answers[question.id]) ? submission.answers[question.id] : {}\\\"\\n                [review]=\\\"(review && review.answers && review.answers[question.id]) ? review.answers[question.id] : {}\\\"\\n                [reviewStatus]=\\\"review ? review.status : ''\\\"\\n                [submissionStatus]=\\\"submission ? submission.status : ''\\\"\\n                [formControlName]=\\\"'q-' + question.id\\\"\\n                [control]=\\\"questionsForm.controls['q-' + question.id]\\\"\\n                (saveProgress)=\\\"submit(true)\\\"\\n              ></app-team-member-selector>\\n\\n            </ion-card-content>\\n          </ng-template>\\n        </ion-card>\\n      </ng-container>\\n    </ng-container>\\n\\n  </form>\\n</ion-content>\\n\\n<ion-footer\\n  color=\\\"light\\\"\\n  class=\\\"ion-footer-absolute\\\"\\n  *ngIf=\\\"hasFooter()\\\">\\n  <ion-toolbar class=\\\"ion-text-center\\\" style=\\\"height: 100%\\\">\\n    <ion-spinner\\n      *ngIf=\\\"loadingAssessment\\\"\\n      name=\\\"dots\\\"\\n      class=\\\"vertical-middle ion-text-center\\\"\\n      style=\\\"width: 100%\\\"\\n    ></ion-spinner>\\n    <ng-container *ngIf=\\\"!loadingAssessment\\\">\\n      <ion-button\\n        *ngIf=\\\"(doAssessment || doReview) && !submitting && !submitted\\\"\\n        id=\\\"btn-submit\\\"\\n        [disabled]=\\\"questionsForm.invalid\\\"\\n        (click)=\\\"submit(false)\\\"\\n        shape=\\\"round\\\"\\n        fill=\\\"clear\\\"\\n        class=\\\"footer-action\\\"\\n        >SUBMIT</ion-button>\\n\\n      <ng-container *ngIf=\\\"footerText()\\\">\\n        <span class=\\\"footer-text ion-float-left\\\">{{ footerText() }}</span>\\n        <img *ngIf=\\\"continueBtnLoading || submitting; else continueTmp\\\" class=\\\"footer-action ion-float-right\\\" src=\\\"/assets/loading.gif\\\">\\n        <ng-template #continueTmp>\\n          <ion-button\\n            (click)=\\\"clickBtnContinue()\\\"\\n            shape=\\\"round\\\"\\n            fill=\\\"clear\\\"\\n            class=\\\"ion-float-right footer-action\\\">CONTINUE</ion-button>\\n        </ng-template>\\n      </ng-container>\\n    </ng-container>\\n\\n  </ion-toolbar>\\n</ion-footer>\\n\"","export default \"<ng-container *ngIf=\\\"file\\\">\\n  <ng-container [ngSwitch]=\\\"fileType\\\">\\n\\n    <ng-container *ngSwitchCase=\\\"'image'\\\">\\n      <app-img [imgSrc]=\\\"file.url\\\"></app-img>\\n      <ng-container *ngIf=\\\"isFileComponent\\\">\\n          <ng-container *ngTemplateOutlet=\\\"fileDetails\\\"></ng-container>\\n      </ng-container>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'video'\\\">\\n      <video controls preload #videoEle>\\n        <ng-container *ngIf=\\\"file.transcoded\\\">\\n          <source [src]=\\\"file.transcoded + '.mp4#t=0.5'\\\" type=\\\"video/mp4\\\">\\n          <source [src]=\\\"file.transcoded + '.webm'\\\" type=\\\"video/webm\\\">\\n          <source [src]=\\\"file.transcoded + '.ts'\\\">\\n        </ng-container>\\n        <source [src]=\\\"file.url\\\">\\n        {{ file.url }}\\n      </video>\\n      <ng-container *ngIf=\\\"isFileComponent\\\">\\n          <ng-container *ngTemplateOutlet=\\\"fileDetails\\\"></ng-container>\\n      </ng-container>\\n    </ng-container>\\n\\n    <ng-container *ngSwitchCase=\\\"'any'\\\">\\n      <div *ngIf=\\\"!(virusDetection && virusDetection.infected); else virusDetected\\\">\\n          <ng-container *ngIf=\\\"isFileComponent; else onlyfilename\\\">\\n              <ng-container *ngTemplateOutlet=\\\"fileDetails\\\"></ng-container>\\n          </ng-container>\\n          <ng-template #onlyfilename>\\n            <a [href]=\\\"file.url\\\" target=\\\"_blank\\\" class=\\\"subtitle-1\\\">\\n              <ion-icon name=\\\"document\\\"></ion-icon>&nbsp;{{ file.filename }}\\n            </a>\\n            <ion-icon *ngIf=\\\"file.url.length > 0\\\" name=\\\"search\\\" (click)=\\\"previewFile(file)\\\" color=\\\"primary\\\" class=\\\"ion-padding-left ion-float-right\\\"></ion-icon>\\n          </ng-template>\\n      </div>\\n      <ng-template #virusDetected>\\n        <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n          <ion-icon name=\\\"alert\\\" color=\\\"danger\\\" slot=\\\"start\\\"></ion-icon>\\n          <ion-label class=\\\"warning\\\">\\n            The file you have uploaded contains a virus and is potentially harmful. Please contact your program coordinator\\n          </ion-label>\\n        </ion-item>\\n      </ng-template>\\n    </ng-container>\\n\\n  </ng-container>\\n</ng-container>\\n\\n<ng-template #fileDetails>\\n  <div class=\\\"file-details\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-xs=\\\"2\\\" size-sm=\\\"2\\\" size-md=\\\"1\\\" size-lg=\\\"1\\\" size-xl=\\\"1\\\">\\n          <ng-container [ngSwitch]=\\\"fileType\\\">\\n            <ng-container *ngSwitchCase=\\\"'video'\\\">\\n              <ion-icon name=\\\"film-outline\\\"></ion-icon>&nbsp;\\n            </ng-container>\\n            <ng-container *ngSwitchCase=\\\"'image'\\\">\\n              <ion-icon name=\\\"image-outline\\\"></ion-icon>&nbsp;\\n            </ng-container>\\n            <ng-container *ngSwitchDefault>\\n              <ion-icon name=\\\"document-outline\\\"></ion-icon>&nbsp;\\n            </ng-container>\\n          </ng-container>\\n        </ion-col>\\n        <ion-col size-xs=\\\"7\\\" size-sm=\\\"7\\\" size-md=\\\"10\\\" size-lg=\\\"10\\\" size-xl=\\\"10\\\" class=\\\"file-name-container\\\">\\n          <ng-container *ngIf=\\\"fileType === 'any'; else otherTypes\\\">\\n            <a [href]=\\\"file.url\\\" target=\\\"_blank\\\" class=\\\"subtitle-1\\\">\\n                {{ file.filename }}\\n            </a>\\n          </ng-container>\\n          <ng-template #otherTypes>\\n            <p class=\\\"black subtitle-1\\\"> {{ file.filename }} </p>\\n          </ng-template>\\n        </ion-col>\\n        <ion-col size-xs=\\\"3\\\" size-sm=\\\"3\\\" size-md=\\\"1\\\" size-lg=\\\"1\\\" size-xl=\\\"1\\\">\\n          <div class=\\\"action-buttons-container\\\">\\n            <ng-container *ngIf=\\\"fileType === 'any'\\\">\\n              <ion-icon name=\\\"search-outline\\\" color=\\\"primary\\\" (click)=\\\"previewFile(file)\\\"></ion-icon>&nbsp;\\n            </ng-container>\\n            <ion-icon *ngIf=\\\"removeFile.observers.length > 0 && !disabled\\\" name=\\\"trash-outline\\\" color=\\\"primary\\\" class=\\\"ion-float-right\\\" (click)=\\\"removeUploadedFile()\\\"></ion-icon>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n</ng-template>\\n\"","export default \"<ng-container *ngIf=\\\"submissionStatus !== 'in progress' && submission && submission.answer\\\">\\n  <app-file-display\\n    [file]=\\\"submission.answer\\\"\\n    [fileType]=\\\"question.fileType\\\"\\n    [isFileComponent]=\\\"true\\\"\\n  ></app-file-display>\\n</ng-container>\\n\\n<div *ngIf=\\\"reviewStatus !== 'in progress' && review && (review.answer || review.comment)\\\" class=\\\"q-reviews\\\">\\n  <ion-label class=\\\"q-title subtitle-2 black\\\">Feedback</ion-label>\\n  <ng-container *ngIf=\\\"review.answer\\\">\\n    <app-file-display\\n      [file]=\\\"review.answer\\\"\\n      [fileType]=\\\"question.fileType\\\"\\n      [isFileComponent]=\\\"true\\\"\\n    ></app-file-display>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"review.comment\\\">\\n    <p class=\\\"paragraph body-2 gray-2\\\">{{ review.comment }}</p>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"doAssessment\\\">\\n  <file-stack *ngIf=\\\"!uploadedFile && !submission.answer\\\"\\n    [accept]=\\\"fileTypes\\\"\\n    [fileType]=\\\"question.fileType\\\"\\n    (complete)=\\\"onFileUploadCompleted($event)\\\"\\n    [disabled]=\\\"control.disabled\\\"\\n  >\\n  </file-stack>\\n  <ion-text *ngFor=\\\"let error of errors\\\" color=\\\"danger\\\">\\n    <p>{{error}}</p>\\n  </ion-text>\\n  <app-file-display\\n    [file]=\\\"uploadedFile ? uploadedFile : submission.answer\\\"\\n    [fileType]=\\\"question.fileType\\\"\\n    [isFileComponent]=\\\"true\\\"\\n    (removeFile)=\\\"removeSubmitFile($event)\\\"\\n    [disabled]=\\\"control.disabled\\\"\\n  ></app-file-display>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"doReview\\\">\\n  <ng-container *ngIf=\\\"question.canAnswer\\\">\\n    <file-stack *ngIf=\\\"!uploadedFile && !review.answer\\\"\\n      [accept]=\\\"fileTypes\\\"\\n      [fileType]=\\\"question.fileType\\\"\\n      (complete)=\\\"onFileUploadCompleted($event, 'answer')\\\"\\n      [disabled]=\\\"control.disabled\\\"\\n    >\\n    </file-stack>\\n    <app-file-display\\n      [file]=\\\"uploadedFile ? uploadedFile : review.answer\\\"\\n      [fileType]=\\\"question.fileType\\\"\\n      [isFileComponent]=\\\"true\\\"\\n      (removeFile)=\\\"removeSubmitFile($event)\\\"\\n      [disabled]=\\\"control.disabled\\\"\\n    ></app-file-display>\\n  </ng-container>\\n  <ion-textarea\\n    *ngIf=\\\"question.canComment && submission.answer\\\"\\n    class=\\\"background-white ion-margin-top\\\"\\n    #commentEle\\n    rows=\\\"4\\\"\\n    [(ngModel)]=\\\"comment\\\"\\n    (ngModelChange)=\\\"onChange(comment, 'comment')\\\"\\n    placeholder=\\\"Please put your feedback here\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n</ng-container>\\n\"","export default \"<ng-container *ngIf=\\\"submissionStatus !== 'in progress' && submission.answer\\\">\\n  <ion-list class=\\\"no-bg\\\">\\n    <ion-item *ngFor=\\\"let choice of question.choices; let i = index\\\" [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n      <ion-label class=\\\"white-space-normal subtitle-1 black\\\">{{ choice.name }}</ion-label>\\n      <ion-checkbox [checked]=\\\"submission.answer.includes(choice.id)\\\" disabled mode=\\\"md\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n  <div *ngIf=\\\"submission.explanation && submission.explanation.changingThisBreaksApplicationSecurity\\\" class=\\\"q-reviews\\\">\\n    <ion-label class=\\\"q-title black\\\">Explanation</ion-label>\\n    <p class=\\\"paragraph\\\" [innerHtml]=\\\"submission.explanation\\\"></p>\\n  </div>\\n</ng-container>\\n\\n<div *ngIf=\\\"reviewStatus !== 'in progress' && (review.answer || review.comment)\\\" class=\\\"q-reviews\\\">\\n  <ion-label class=\\\"q-title subtitle-2 black\\\">Feedback</ion-label>\\n  <ng-container *ngIf=\\\"review.answer\\\">\\n    <ion-list class=\\\"no-bg\\\">\\n      <ng-container *ngFor=\\\"let choice of question.choices; let i = index\\\">\\n        <ng-container *ngIf=\\\"review.answer.includes(choice.id)\\\">\\n          <ion-item [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n            <ion-label class=\\\"white-space-normal subtitle-1 gray-2\\\">{{ choice.name }}</ion-label>\\n            <ion-checkbox checked disabled mode=\\\"md\\\"></ion-checkbox>\\n          </ion-item>\\n        </ng-container>\\n      </ng-container>\\n    </ion-list>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"review.comment\\\">\\n    <p class=\\\"paragraph body-2 gray-2\\\">{{ review.comment }}</p>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"doAssessment\\\">\\n  <ion-list class=\\\"no-bg\\\">\\n    <ion-item class=\\\"choice-item\\\" *ngFor=\\\"let choice of question.choices; let i = index\\\" [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n      <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ choice.name }}</ion-label>\\n      <ion-checkbox\\n        [checked]=\\\"submission.answer ? submission.answer.includes(choice.id) : false\\\"\\n        [value]=\\\"choice.id\\\"\\n        mode=\\\"md\\\"\\n        (ionChange)=\\\"onChange(choice.id)\\\"\\n        [disabled]=\\\"control.disabled\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n  <ion-text *ngFor=\\\"let error of errors\\\" color=\\\"danger\\\">\\n    <p>{{error}}</p>\\n  </ion-text>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"doReview\\\">\\n  <ion-list class=\\\"no-bg\\\" *ngIf=\\\"question.canAnswer\\\">\\n    <ion-list-header>\\n      <ion-label class=\\\"body-2\\\">Your Answer is</ion-label>\\n    </ion-list-header>\\n    <ion-item class=\\\"choice-item\\\" *ngFor=\\\"let choice of question.choices; let i = index\\\" [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n      <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ choice.name }}</ion-label>\\n      <ion-checkbox\\n        [checked]=\\\"review.answer ? review.answer.includes(choice.id) : false\\\"\\n        [value]=\\\"choice.id\\\"\\n        mode=\\\"md\\\"\\n        (ionChange)=\\\"onChange(choice.id, 'answer')\\\"\\n        [disabled]=\\\"control.disabled\\\"></ion-checkbox>\\n    </ion-item>\\n  </ion-list>\\n  <ion-textarea\\n    *ngIf=\\\"question.canComment && submission.answer\\\"\\n    class=\\\"background-white\\\"\\n    #commentEle\\n    margin-top\\n    rows=\\\"4\\\"\\n    [(ngModel)]=\\\"comment\\\"\\n    (ngModelChange)=\\\"onChange(comment, 'comment')\\\"\\n    placeholder=\\\"Please put your feedback here\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n</ng-container>\\n\"","export default \"<ng-container *ngIf=\\\"submissionStatus !== 'in progress' && submission.answer\\\">\\n  <ion-list class=\\\"no-bg\\\">\\n    <ion-radio-group [value]=\\\"submission.answer\\\">\\n      <ion-item *ngFor=\\\"let choice of question.choices; let i = index\\\" [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n        <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ choice.name }}</ion-label>\\n        <ion-radio [value]=\\\"choice.id\\\" disabled mode=\\\"md\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n  <div *ngIf=\\\"submission.explanation && submission.explanation.changingThisBreaksApplicationSecurity\\\" class=\\\"q-reviews\\\">\\n    <ion-label class=\\\"q-title black\\\">Explanation</ion-label>\\n    <p class=\\\"paragraph\\\" [innerHtml]=\\\"submission.explanation\\\"></p>\\n  </div>\\n</ng-container>\\n\\n<div *ngIf=\\\"reviewStatus !== 'in progress' && (review.answer || review.comment)\\\" class=\\\"q-reviews\\\">\\n  <ion-label class=\\\"q-title subtitle-2 black\\\">Feedback</ion-label>\\n  <ng-container *ngIf=\\\"review.answer\\\">\\n    <ion-list class=\\\"no-bg\\\">\\n      <ion-radio-group [value]=\\\"review.answer\\\">\\n        <ng-container *ngFor=\\\"let choice of question.choices; let i = index\\\">\\n          <ng-container *ngIf=\\\"choice.id === review.answer\\\">\\n            <ion-item [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n              <ion-label class=\\\"white-space-normal subtitle-1 gray-2\\\">{{ choice.name }}</ion-label>\\n              <ion-radio [value]=\\\"choice.id\\\" disabled mode=\\\"md\\\"></ion-radio>\\n            </ion-item>\\n          </ng-container>\\n        </ng-container>\\n      </ion-radio-group>\\n    </ion-list>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"review.comment\\\">\\n    <p class=\\\"paragraph body-2 gray-2\\\">{{ review.comment }}</p>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"doAssessment\\\">\\n  <ion-list class=\\\"no-bg\\\">\\n    <ion-radio-group [value]=\\\"submission.answer\\\" #answerEle (ionChange)=\\\"onChange(answerEle.value)\\\">\\n      <ion-item class=\\\"choice-item\\\" *ngFor=\\\"let choice of question.choices; let i = index\\\" [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n        <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ choice.name }}</ion-label>\\n        <ion-radio [value]=\\\"choice.id\\\" mode=\\\"md\\\" [disabled]=\\\"control.disabled\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"doReview\\\">\\n  <ion-list class=\\\"no-bg\\\" *ngIf=\\\"question.canAnswer\\\">\\n    <ion-radio-group #answerEle [value]=\\\"review.answer\\\" (ionChange)=\\\"onChange(answerEle.value, 'answer')\\\">\\n      <ion-list-header>\\n        <ion-label class=\\\"body-2 black\\\">Your Answer is</ion-label>\\n      </ion-list-header>\\n      <ion-item class=\\\"choice-item\\\" *ngFor=\\\"let choice of question.choices; let i = index\\\" [lines]=\\\"i == question.choices.length - 1 ? 'none' : ''\\\">\\n        <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ choice.name }}</ion-label>\\n        <ion-radio [value]=\\\"choice.id\\\" mode=\\\"md\\\" [disabled]=\\\"control.disabled\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n  <ion-textarea\\n    *ngIf=\\\"question.canComment && submission.answer\\\"\\n    class=\\\"background-white ion-margin-top\\\"\\n    #commentEle\\n    [(ngModel)]=\\\"comment\\\"\\n    rows=\\\"4\\\"\\n    (ngModelChange)=\\\"onChange(comment, 'comment')\\\"\\n    placeholder=\\\"Please put your feedback here\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n</ng-container>\\n\"","export default \"<ng-container *ngIf=\\\"submissionStatus !== 'in progress' && submission.answer\\\">\\n  <ion-list class=\\\"no-bg\\\">\\n    <ion-radio-group [value]=\\\"submission.answer\\\">\\n      <ion-item *ngFor=\\\"let teamMember of question.teamMembers;let i = index\\\" [lines]=\\\"i == question.teamMembers.length - 1 ? 'none' : ''\\\">\\n        <ion-label class=\\\"white-space-normal subtitle-1 black\\\">{{ teamMember.userName }}</ion-label>\\n        <ion-radio [value]=\\\"teamMember.key\\\" disabled mode=\\\"md\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</ng-container>\\n\\n<div *ngIf=\\\"reviewStatus !== 'in progress' && (review.answer || review.comment)\\\" class=\\\"q-reviews\\\">\\n  <ion-label class=\\\"q-title subtitle-2 black\\\">Feedback</ion-label>\\n  <ng-container *ngIf=\\\"review.answer\\\">\\n    <ion-list class=\\\"no-bg\\\">\\n      <ion-radio-group [value]=\\\"review.answer\\\">\\n        <ng-container *ngFor=\\\"let teamMember of question.teamMembers;let i = index\\\">\\n          <ng-container *ngIf=\\\"teamMember.key === review.answer\\\">\\n            <ion-item [lines]=\\\"i == question.teamMembers.length - 1 ? 'none' : ''\\\">\\n              <ion-label class=\\\"white-space-normal subtitle-1 gray-2\\\">{{ teamMember.userName }}</ion-label>\\n              <ion-radio [value]=\\\"teamMember.key\\\" disabled mode=\\\"md\\\"></ion-radio>\\n            </ion-item>\\n          </ng-container>\\n        </ng-container>\\n      </ion-radio-group>\\n    </ion-list>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"review.comment\\\">\\n    <p class=\\\"paragraph body-2 gray-2\\\">{{ review.comment }}</p>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"doAssessment\\\">\\n  <ion-list class=\\\"no-bg\\\">\\n    <ion-radio-group [value]=\\\"submission.answer\\\" #answerEle (ionChange)=\\\"onChange(answerEle.value)\\\">\\n      <ion-item class=\\\"choice-item\\\" *ngFor=\\\"let teamMember of question.teamMembers;let i = index\\\" [lines]=\\\"i == question.teamMembers.length - 1 ? 'none' : ''\\\">\\n        <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ teamMember.userName }}</ion-label>\\n        <ion-radio [value]=\\\"teamMember.key\\\" mode=\\\"md\\\" [disabled]=\\\"control.disabled\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"doReview\\\">\\n  <ion-list class=\\\"no-bg\\\" *ngIf=\\\"question.canAnswer\\\">\\n    <ion-radio-group #answerEle [value]=\\\"review.answer\\\" (ionChange)=\\\"onChange(answerEle.value, 'answer')\\\">\\n      <ion-list-header>\\n        <ion-label class=\\\"body-2\\\">Your Answer is</ion-label>\\n      </ion-list-header>\\n      <ion-item class=\\\"choice-item\\\" *ngFor=\\\"let teamMember of question.teamMembers;let i = index\\\" [lines]=\\\"i == question.teamMembers.length - 1 ? 'none' : ''\\\">\\n        <ion-label class=\\\"white-space-normal subtitle-1\\\">{{ teamMember.userName }}</ion-label>\\n        <ion-radio [value]=\\\"teamMember.key\\\" mode=\\\"md\\\" [disabled]=\\\"control.disabled\\\"></ion-radio>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n  <ion-textarea\\n    *ngIf=\\\"question.canComment\\\"\\n    class=\\\"background-white ion-margin-top\\\"\\n    #commentEle\\n    rows=\\\"4\\\"\\n    [(ngModel)]=\\\"comment\\\"\\n    (ngModelChange)=\\\"onChange(comment, 'comment')\\\"\\n    placeholder=\\\"Please put your feedback here\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n</ng-container>\\n\\n\"","export default \"<ng-container *ngIf=\\\"submissionStatus !== 'in progress' && submission.answer\\\">\\n  <p class=\\\"paragraph body-1 black\\\">{{ submission.answer }}</p>\\n</ng-container>\\n\\n<div *ngIf=\\\"reviewStatus !== 'in progress' && (review.answer || review.comment)\\\" class=\\\"q-reviews\\\">\\n  <ion-label class=\\\"q-title subtitle-2 black\\\">Feedback</ion-label>\\n  <ng-container *ngIf=\\\"review.answer\\\">\\n    <p class=\\\"paragraph body-2 gray-2\\\">{{ review.answer }}</p>\\n  </ng-container>\\n  <ng-container *ngIf=\\\"review.comment\\\">\\n    <p class=\\\"paragraph body-2 gray-2\\\">{{ review.comment }}</p>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"doAssessment\\\">\\n  <ion-textarea\\n    class=\\\"background-white ion-margin-top textarea\\\"\\n    [(ngModel)]=\\\"answer\\\"\\n    #answerEle\\n    rows=\\\"4\\\"\\n    (ionFocus)=\\\"onFocus()\\\"\\n    (ionChange)=\\\"onChange()\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n  <ion-text *ngFor=\\\"let error of errors\\\" color=\\\"danger\\\">\\n    <p>{{error}}</p>\\n  </ion-text>\\n</ng-container>\\n\\n<ng-container *ngIf=\\\"doReview\\\">\\n  <ion-textarea\\n    *ngIf=\\\"question.canAnswer\\\"\\n    class=\\\"background-white ion-margin-top textarea\\\"\\n    rows=\\\"4\\\"\\n    [(ngModel)]=\\\"answer\\\"\\n    #answerEle\\n    (ionFocus)=\\\"onFocus()\\\"\\n    (ionChange)=\\\"onChange('answer')\\\"\\n    placeholder=\\\"Please put your answer here\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n  <ion-textarea\\n    *ngIf=\\\"question.canComment && submission.answer\\\"\\n    class=\\\"background-white ion-margin-top\\\"\\n    [(ngModel)]=\\\"comment\\\"\\n    #commentEle\\n    rows=\\\"4\\\"\\n    (ionFocus)=\\\"onFocus()\\\"\\n    (ionChange)=\\\"onChange('comment')\\\"\\n    placeholder=\\\"Please put your feedback here\\\"\\n    [disabled]=\\\"control.disabled\\\"></ion-textarea>\\n</ng-container>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AssessmentComponent } from './assessment.component';\n\nconst routes: Routes = [\n  {\n    path: 'assessment/:activityId/:contextId/:id',\n    component: AssessmentComponent,\n    data: {\n      action: 'assessment'\n    }\n  },\n  {\n    path: 'review/:contextId/:id/:submissionId',\n    component: AssessmentComponent,\n    data: {\n      action: 'review'\n    }\n  },\n  {\n    path: 'event/:contextId/:id',\n    component: AssessmentComponent,\n    data: {\n      action: 'assessment',\n      from: 'events'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AssessmentRoutingModule {}\n","export default \".text-right {\\n  text-align: right;\\n}\\n\\n.icon-info {\\n  font-size: 20px;\\n}\\n\\n.icon-backward {\\n  font-size: 20px !important;\\n}\\n\\n.review-submitter p {\\n  margin-top: 16px;\\n  margin-bottom: 16px;\\n}\\n\\n.sub-title.title-ios {\\n  margin-top: 30px;\\n  height: 16px;\\n}\\n\\n.text-button {\\n  text-transform: capitalize;\\n}\\n\\nion-header ion-toolbar {\\n  min-height: 56px;\\n}\\n\\nion-header ion-toolbar .saving-msg {\\n  margin-top: 30px;\\n  margin-left: 60px;\\n}\\n\\n.member-detail-container {\\n  margin-bottom: 0px;\\n  margin-top: 15px;\\n}\\n\\n.member-detail-container ion-item {\\n  height: 64px;\\n  --background: transparent;\\n  --padding-start: 0px;\\n}\\n\\n.member-detail-container ion-avatar {\\n  height: 48px;\\n  width: 48px;\\n}\\n\\n.member-detail-container ion-label h4 {\\n  font-size: 16px;\\n}\\n\\n.member-detail-container ion-label p {\\n  font-size: 12px;\\n  color: var(--ion-color-medium-shade);\\n}\\n\\nion-footer .footer-text {\\n  margin: 20px;\\n  text-transform: capitalize;\\n}\\n\\nion-footer .footer-action {\\n  height: 40px;\\n  margin: 10px 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9hc3Nlc3NtZW50L2Fzc2Vzc21lbnQuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2Fzc2Vzc21lbnQvYXNzZXNzbWVudC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0FDQ0Y7O0FEQ0E7RUFDRSxlQUFBO0FDRUY7O0FEQUE7RUFDRSwwQkFBQTtBQ0dGOztBRENFO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQ0VKOztBREdFO0VBQ0UsZ0JBQUE7RUFDQSxZQUFBO0FDQUo7O0FER0E7RUFDRSwwQkFBQTtBQ0FGOztBREdBO0VBQ0UsZ0JBQUE7QUNBRjs7QURDRTtFQUNFLGdCQUFBO0VBQ0EsaUJBQUE7QUNDSjs7QURHQTtFQUNFLGtCQUFBO0VBQ0EsZ0JBQUE7QUNBRjs7QURDRTtFQUNFLFlBQUE7RUFDQSx5QkFBQTtFQUNBLG9CQUFBO0FDQ0o7O0FEQ0U7RUFDRSxZQUFBO0VBQ0EsV0FBQTtBQ0NKOztBREVJO0VBQ0UsZUFBQTtBQ0FOOztBREVJO0VBQ0UsZUFBQTtFQUNBLG9DQUFBO0FDQU47O0FES0U7RUFDRSxZQUFBO0VBQ0EsMEJBQUE7QUNGSjs7QURJRTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtBQ0ZKIiwiZmlsZSI6InNyYy9hcHAvYXNzZXNzbWVudC9hc3Nlc3NtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRleHQtcmlnaHQge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbn1cbi5pY29uLWluZm8ge1xuICBmb250LXNpemU6IDIwcHg7XG59XG4uaWNvbi1iYWNrd2FyZCB7XG4gIGZvbnQtc2l6ZTogMjBweCAhaW1wb3J0YW50O1xufVxuXG4ucmV2aWV3LXN1Ym1pdHRlciB7XG4gIHAge1xuICAgIG1hcmdpbi10b3A6IDE2cHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMTZweDtcbiAgfVxufVxuXG4uc3ViLXRpdGxlIHtcbiAgJi50aXRsZS1pb3Mge1xuICAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICAgaGVpZ2h0OiAxNnB4O1xuICB9XG59XG4udGV4dC1idXR0b24ge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbn1cblxuaW9uLWhlYWRlciBpb24tdG9vbGJhciB7XG4gIG1pbi1oZWlnaHQ6IDU2cHg7XG4gIC5zYXZpbmctbXNnIHtcbiAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA2MHB4O1xuICB9XG59XG5cbi5tZW1iZXItZGV0YWlsLWNvbnRhaW5lciB7XG4gIG1hcmdpbi1ib3R0b206IDBweDtcbiAgbWFyZ2luLXRvcDogMTVweDtcbiAgaW9uLWl0ZW0ge1xuICAgIGhlaWdodDogNjRweDtcbiAgICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgIC0tcGFkZGluZy1zdGFydDogMHB4O1xuICB9XG4gIGlvbi1hdmF0YXIge1xuICAgIGhlaWdodDogNDhweDtcbiAgICB3aWR0aDogNDhweDtcbiAgfVxuICBpb24tbGFiZWwge1xuICAgIGg0IHtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICB9XG4gICAgcCB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLW1lZGl1bS1zaGFkZSk7XG4gICAgfVxuICB9XG59XG5pb24tZm9vdGVyIHtcbiAgLmZvb3Rlci10ZXh0IHtcbiAgICBtYXJnaW46IDIwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gIH1cbiAgLmZvb3Rlci1hY3Rpb24ge1xuICAgIGhlaWdodDogNDBweDtcbiAgICBtYXJnaW46IDEwcHggMjBweDtcbiAgfVxufVxuXG4iLCIudGV4dC1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4uaWNvbi1pbmZvIHtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG4uaWNvbi1iYWNrd2FyZCB7XG4gIGZvbnQtc2l6ZTogMjBweCAhaW1wb3J0YW50O1xufVxuXG4ucmV2aWV3LXN1Ym1pdHRlciBwIHtcbiAgbWFyZ2luLXRvcDogMTZweDtcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcbn1cblxuLnN1Yi10aXRsZS50aXRsZS1pb3Mge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBoZWlnaHQ6IDE2cHg7XG59XG5cbi50ZXh0LWJ1dHRvbiB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuXG5pb24taGVhZGVyIGlvbi10b29sYmFyIHtcbiAgbWluLWhlaWdodDogNTZweDtcbn1cbmlvbi1oZWFkZXIgaW9uLXRvb2xiYXIgLnNhdmluZy1tc2cge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tbGVmdDogNjBweDtcbn1cblxuLm1lbWJlci1kZXRhaWwtY29udGFpbmVyIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4O1xuICBtYXJnaW4tdG9wOiAxNXB4O1xufVxuLm1lbWJlci1kZXRhaWwtY29udGFpbmVyIGlvbi1pdGVtIHtcbiAgaGVpZ2h0OiA2NHB4O1xuICAtLWJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAtLXBhZGRpbmctc3RhcnQ6IDBweDtcbn1cbi5tZW1iZXItZGV0YWlsLWNvbnRhaW5lciBpb24tYXZhdGFyIHtcbiAgaGVpZ2h0OiA0OHB4O1xuICB3aWR0aDogNDhweDtcbn1cbi5tZW1iZXItZGV0YWlsLWNvbnRhaW5lciBpb24tbGFiZWwgaDQge1xuICBmb250LXNpemU6IDE2cHg7XG59XG4ubWVtYmVyLWRldGFpbC1jb250YWluZXIgaW9uLWxhYmVsIHAge1xuICBmb250LXNpemU6IDEycHg7XG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtLXNoYWRlKTtcbn1cblxuaW9uLWZvb3RlciAuZm9vdGVyLXRleHQge1xuICBtYXJnaW46IDIwcHg7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xufVxuaW9uLWZvb3RlciAuZm9vdGVyLWFjdGlvbiB7XG4gIGhlaWdodDogNDBweDtcbiAgbWFyZ2luOiAxMHB4IDIwcHg7XG59Il19 */\"","import { Component, Input, NgZone, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { AssessmentService, Assessment, Submission, Review, AssessmentSubmitBody } from './assessment.service';\nimport { UtilsService } from '../services/utils.service';\nimport { NotificationService } from '@shared/notification/notification.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BrowserStorageService } from '@services/storage.service';\nimport { RouterEnter } from '@services/router-enter.service';\nimport { SharedService } from '@services/shared.service';\nimport { ActivityService } from '../activity/activity.service';\nimport { FastFeedbackService } from '../fast-feedback/fast-feedback.service';\nimport { interval, timer, Subscription } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { NewRelicService } from '@shared/new-relic/new-relic.service';\n\nconst SAVE_PROGRESS_TIMEOUT = 10000;\n\n@Component({\n  selector: 'app-assessment',\n  templateUrl: 'assessment.component.html',\n  styleUrls: ['assessment.component.scss']\n})\nexport class AssessmentComponent extends RouterEnter {\n  @Input() inputId: number;\n  @Input() inputActivityId: number;\n  @Input() inputSubmissionId: number;\n  @Input() inputContextId: number;\n  @Input() inputAction: string;\n  @Input() fromPage = '';\n  @Output() navigate = new EventEmitter();\n  @Output() changeStatus = new EventEmitter();\n  getAssessment: Subscription;\n  getSubmission: Subscription;\n  routeUrl = '/assessment/';\n  // assessment id\n  id: number;\n  // activity id\n  activityId: number;\n  // context id\n  contextId: number;\n  submissionId: number;\n  assessment: Assessment = {\n    name: '',\n    type: '',\n    description: '',\n    isForTeam: false,\n    dueDate: '',\n    isOverdue: false,\n    groups: [],\n    pulseCheck: false,\n  };\n  submission: Submission = {\n    id: 0,\n    status: '',\n    answers: {},\n    submitterName: '',\n    modified: '',\n    isLocked: false,\n    completed: false,\n    submitterImage: '',\n    reviewerName: ''\n  };\n  review: Review = {\n    id: 0,\n    answers: {},\n    status: '',\n    modified: ''\n  };\n\n  // action == 'assessment' is for user to do assessment, including seeing the submission or seeing the feedback. This actually means the current user is the user who should \"do\" this assessment\n  // action == 'reivew' is for user to do review for this assessment. This means the current user is the user who should \"review\" this assessment\n  action: string;\n\n  // if doAssessment is true, it means this user is actually doing assessment, meaning it is not started or in progress\n  // if action == 'assessment' and doAssessment is false, it means this user is reading the submission or feedback\n  doAssessment = false;\n  // if doReview is true, it means this user is actually doing review, meaning this assessment is pending review\n  // if action == 'review' and doReview is false, it means the review is done and this user is reading the submission and review\n  doReview = false;\n\n  feedbackReviewed = false;\n  loadingAssessment = true;\n  questionsForm = new FormGroup({});\n  submitting: boolean;\n  submitted: boolean;\n  savingButtonDisabled = true;\n  savingMessage: string;\n  // used to prevent manual & automate saving happen at the same time\n  saving: boolean;\n  continueBtnLoading: boolean;\n\n  constructor (\n    public router: Router,\n    private route: ActivatedRoute,\n    private assessmentService: AssessmentService,\n    public utils: UtilsService,\n    private notificationService: NotificationService,\n    public storage: BrowserStorageService,\n    public sharedService: SharedService,\n    private activityService: ActivityService,\n    private fastFeedbackService: FastFeedbackService,\n    private ngZone: NgZone,\n    private newRelic: NewRelicService,\n  ) {\n    super(router);\n  }\n\n  // force every navigation happen under radar of angular\n  private _navigate(direction, params?): Promise<boolean> {\n    if (this.utils.isMobile()) {\n      // redirect to topic/assessment page for mobile\n      return this.ngZone.run(() => {\n        return this.router.navigate(direction, params);\n      });\n    } else {\n      // emit to parent component(events component)\n      if (['events', 'reviews'].includes(direction[1])) {\n        this.navigate.emit();\n        return ;\n      }\n      // emit event to parent component(task component)\n      switch (direction[0]) {\n        case 'topic':\n          this.navigate.emit({\n            type: 'topic',\n            topicId: direction[2]\n          });\n          break;\n        case 'assessment':\n          this.navigate.emit({\n            type: 'assessment',\n            contextId: direction[3],\n            assessmentId: direction[4]\n          });\n          break;\n        default:\n          return this.ngZone.run(() => {\n            return this.router.navigate(direction, params);\n          });\n      }\n    }\n  }\n\n  private _initialise() {\n    this.assessment = {\n      name: '',\n      type: '',\n      description: '',\n      isForTeam: false,\n      dueDate: '',\n      isOverdue: false,\n      groups: [],\n      pulseCheck: false,\n    };\n    this.submission = {\n      id: 0,\n      status: '',\n      answers: {},\n      submitterName: '',\n      modified: '',\n      isLocked: false,\n      completed: false,\n      submitterImage: '',\n      reviewerName: ''\n    };\n    this.review = {\n      id: 0,\n      answers: {},\n      status: '',\n      modified: ''\n    };\n    this.loadingAssessment = true;\n    this.saving = false;\n    this.doAssessment = false;\n    this.doReview = false;\n    this.feedbackReviewed = false;\n    this.questionsForm = new FormGroup({});\n    this.submitting = false;\n    this.submitted = false;\n    this.savingButtonDisabled = true;\n    this.savingMessage = '';\n    this.continueBtnLoading = false;\n  }\n\n  onEnter() {\n    this._initialise();\n\n    if (this.inputAction) {\n      this.action = this.inputAction;\n    } else {\n      this.action = this.route.snapshot.data.action;\n    }\n    if (!this.fromPage) {\n      this.fromPage = this.route.snapshot.paramMap.get('from');\n    }\n    if (!this.fromPage) {\n      this.fromPage = this.route.snapshot.data.from;\n    }\n    if (this.inputId) {\n      this.id = +this.inputId;\n    } else {\n      this.id = +this.route.snapshot.paramMap.get('id');\n    }\n    if (this.inputActivityId) {\n      this.activityId = +this.inputActivityId;\n    } else {\n      this.activityId = +this.route.snapshot.paramMap.get('activityId');\n    }\n    if (this.inputContextId) {\n      this.contextId = +this.inputContextId;\n    } else {\n      this.contextId = +this.route.snapshot.paramMap.get('contextId');\n    }\n    if (this.inputSubmissionId) {\n      this.submissionId = +this.inputSubmissionId;\n    } else {\n      this.submissionId = +this.route.snapshot.paramMap.get('submissionId');\n    }\n\n    // get assessment structure and populate the question form\n    this.assessmentService.getAssessment(this.id, this.action, this.activityId, this.contextId, this.submissionId)\n      .subscribe(\n        result => {\n          this.assessment = result.assessment;\n          this.newRelic.setPageViewName(`Assessment: ${this.assessment.name} ID: ${this.id}`);\n          this.populateQuestionsForm();\n          this.loadingAssessment = false;\n          this._handleSubmissionData(result.submission);\n          // display pop up if it is team assessment and user is not in team\n          if (this.doAssessment && this.assessment.isForTeam && !this.storage.getUser().teamId) {\n            return this.notificationService.alert({\n              message: 'To do this assessment, you have to be in a team.',\n              buttons: [\n                {\n                  text: 'OK',\n                  role: 'cancel',\n                  handler: () => {\n                    if (this.activityId) {\n                      this._navigate(['app', 'activity', this.activityId ]);\n                    } else {\n                      this._navigate(['app', 'home']);\n                    }\n                  }\n                }\n              ]\n            });\n          }\n          this._handleReviewData(result.review);\n        },\n        error => {\n          this.newRelic.noticeError(error);\n        }\n      );\n  }\n\n  private _handleSubmissionData(submission) {\n    this.submission = submission;\n    // If team assessment is locked, set the page to readonly mode.\n    // set doAssessment, doReview to false - when assessment is locked, user can't do both.\n    // set submission status to done - we need to show readonly answers in question components.\n    if (this.submission && this.submission.isLocked) {\n      this.doAssessment = false;\n      this.doReview = false;\n      this.savingButtonDisabled = true;\n      this.submission.status = 'done';\n      return;\n    }\n\n    // this component become a page for doing assessment if\n    // - submission is empty or\n    // - submission.status is 'in progress'\n    if (this.utils.isEmpty(this.submission) || this.submission.status === 'in progress') {\n      this.doAssessment = true;\n      this.doReview = false;\n      if (this.submission && this.submission.status === 'in progress') {\n        this.savingMessage = 'Last saved ' + this.utils.timeFormatter(this.submission.modified);\n        this.savingButtonDisabled = false;\n      }\n      return;\n    }\n\n    // this component become a page for doing review, if\n    // - the submission status is 'pending review' and\n    // - this.action is review\n    if (this.submission.status === 'pending review' && this.action === 'review') {\n      this.doReview = true;\n    }\n\n    this.feedbackReviewed = this.submission.completed;\n  }\n\n  private _handleReviewData(review) {\n    this.review = review;\n    if (!review && this.action === 'review' && !this.doReview) {\n      return this.notificationService.alert({\n        message: 'There is no Assessment to review.',\n        buttons: [\n          {\n            text: 'OK',\n            role: 'cancel',\n            handler: () => {\n                this._navigate(['app', 'home']);\n              }\n          }\n        ]\n      });\n    }\n    if (this.doReview && review.status === 'in progress') {\n      this.savingMessage = 'Last saved ' + this.utils.timeFormatter(review.modified);\n      this.savingButtonDisabled = false;\n    }\n  }\n\n\n  ionViewWillLeave() {\n    this.sharedService.stopPlayingVideos();\n  }\n\n  /**\n   * a consistent comparison logic to ensure mandatory status\n   * @param {question} question\n   */\n  private isRequired(question) {\n    let role = 'submitter';\n\n    if (this.action === 'review') {\n      role = 'reviewer';\n    }\n\n    return (question.isRequired && question.audience.includes(role));\n  }\n\n  // Populate the question form with FormControls.\n  // The name of form control is like 'q-2' (2 is an example of question id)\n  populateQuestionsForm() {\n    let validator = [];\n    this.assessment.groups.forEach(group => {\n      group.questions.forEach(question => {\n        // check if the compulsory is mean for current user's role\n        if (this.isRequired(question)) {\n          // put 'required' validator in FormControl\n          validator = [Validators.required];\n        } else {\n          validator = [];\n        }\n\n        this.questionsForm.addControl('q-' + question.id, new FormControl('', validator));\n      });\n    });\n  }\n\n  /**\n   * Navigate back to the previous page\n   */\n  navigateBack(): Promise<boolean> {\n    if (this.fromPage && this.fromPage === 'reviews') {\n      return this._navigate(['app', 'reviews']);\n    }\n    if (this.fromPage && this.fromPage === 'events') {\n      return this._navigate(['app', 'events']);\n    }\n    if (this.activityId) {\n      return this._navigate(['app', 'activity', this.activityId ]);\n    }\n    return this._navigate(['app', 'home']);\n  }\n\n  /**\n   * When user click on the back button\n   */\n  back(): Promise<boolean | void> {\n    this.newRelic.actionText('Back to previous page.');\n\n    if (this.action === 'assessment'\n      && this.submission\n      && this.submission.status === 'published'\n      && !this.feedbackReviewed) {\n      return this.notificationService.alert({\n        header: `Mark feedback as read?`,\n        message: 'Would you like to mark the feedback as read?',\n        buttons: [\n          {\n            text: 'No',\n            handler: () => this.navigateBack(),\n          },\n          {\n            text: 'Yes',\n            handler: () => this.markReviewFeedbackAsRead().then(() => {\n              return this.navigateBack();\n            })\n          }\n        ]\n      });\n    } else {\n      // force saving progress\n      this.submit(true , true, true);\n      return this.navigateBack();\n    }\n  }\n\n  /**\n   * @name compulsoryQuestionsAnswered\n   * @description to check if every compulsory question has been answered\n   * @param {Object[]} answers a list of answer object (in submission-based format)\n   */\n  compulsoryQuestionsAnswered(answers): object[] {\n    const missing = [];\n    const answered = {};\n    this.utils.each(answers, answer => {\n      answered[answer.assessment_question_id] = answer;\n    });\n\n    this.assessment.groups.forEach(group => {\n      group.questions.forEach(question => {\n        if (this.isRequired(question)) {\n          if (this.utils.isEmpty(answered[question.id]) || this.utils.isEmpty(answered[question.id].answer)) {\n            missing.push(question);\n          }\n        }\n      });\n    });\n\n    return missing;\n  }\n\n  /**\n   * When user click the continue button\n   */\n  async clickBtnContinue() {\n    if (this.submission && this.submission.status === 'published' && !this.feedbackReviewed) {\n      await this.markReviewFeedbackAsRead();\n    }\n    this.goToNextTask();\n  }\n\n  /**\n   * Go to the next task\n   */\n  goToNextTask() {\n    // skip \"continue workflow\" && instant redirect user, when:\n    // - review action (this.action == 'review')\n    // - fromPage = events (check AssessmentRoutingModule)\n    if (this.action === 'review' ||\n      (this.action === 'assessment' && this.fromPage === 'events')\n    ) {\n      return this.navigateBack();\n    }\n\n    this.newRelic.actionText('Navigate to next task.');\n    this.continueBtnLoading = true;\n    this.activityService.gotoNextTask(this.activityId, 'assessment', this.id, this.submitted).then(redirect => {\n      this.continueBtnLoading = false;\n      if (redirect) {\n        this._navigate(redirect);\n      }\n    });\n  }\n\n  /**\n   * - check if fastfeedback is available\n   * - show next sequence if submission successful\n   */\n  private async pullFastFeedback() {\n    this.continueBtnLoading = true;\n    // check if this assessment have plus check turn on, if it's on show plus check and toast message\n    if (!this.assessment.pulseCheck) {\n      this.continueBtnLoading = false;\n      return;\n    }\n    try {\n      const modal = await this.fastFeedbackService.pullFastFeedback({ modalOnly: true }).toPromise();\n      if (modal && modal.present) {\n        await modal.present();\n        await modal.onDidDismiss();\n      }\n      this.continueBtnLoading = false;\n    } catch (err) {\n      const toasted = await this.notificationService.alert({\n        header: 'Error retrieving pulse check data',\n        message: err.msg || JSON.stringify(err)\n      });\n      this.continueBtnLoading = false;\n      throw new Error(err);\n    }\n  }\n\n  /**\n   * handle submission and autosave\n   * @param saveInProgress set true for autosaving or it treat the action as final submision\n   * @param goBack use to unlock team assessment when leave assessment by clicking back button\n   * @param isManualSave use to detect manual progress save\n   */\n  async submit(saveInProgress: boolean, goBack?: boolean, isManualSave?: boolean): Promise<any> {\n\n    /**\n     * checking if this is a submission or progress save\n     * - if it's a submission\n     *    - assign true to saving variable to disable duplicate saving\n     *    - change submitting variable value to true\n     * - if it's a progress save\n     *    - if this is a manual save or there is no other auto save in progress\n     *      - change saving variable value to true to disable duplicate saving\n     *      - make manual save button disable\n     *      - change savingMessage variable value to 'Saving...' to show save in progress\n     *    - if this is not manual save or there is one save in progress\n     *      - do nothing\n     */\n    if (saveInProgress) {\n      if (isManualSave || !this.saving) {\n        this.savingMessage = 'Saving...';\n        this.savingButtonDisabled = true;\n      } else {\n        return;\n      }\n    } else {\n      this.submitting = true;\n    }\n    this.saving = true;\n\n    const answers = [];\n    let questionId = 0;\n    let assessment: AssessmentSubmitBody;\n\n    assessment = {\n      id: this.id,\n      in_progress: false\n    };\n\n    // form submission answers\n    if (this.doAssessment) {\n      assessment.context_id = this.contextId;\n\n      if (saveInProgress) {\n        assessment.in_progress = true;\n      }\n      if (this.assessment.isForTeam && goBack) {\n        assessment.unlock = true;\n      }\n      this.utils.each(this.questionsForm.value, (value, key) => {\n        questionId = +key.replace('q-', '');\n        let answer;\n        if (value) {\n          answer = value;\n        } else {\n          this.assessment.groups.forEach(group => {\n            const currentQuestion = group.questions.find(question => {\n              return question.id === questionId;\n            });\n            if (currentQuestion && currentQuestion.type === 'multiple') {\n              answer = [];\n            } else {\n              answer = null;\n            }\n          });\n        }\n        answers.push({\n          assessment_question_id: questionId,\n          answer: answer\n        });\n      });\n    }\n\n    // form feedback answers\n    if (this.doReview) {\n      assessment = Object.assign(assessment, {\n        review_id: this.review.id,\n        submission_id: this.submission ? this.submission.id : 0,\n        in_progress: (saveInProgress) ? true : false,\n      });\n\n      this.utils.each(this.questionsForm.value, (answer, key) => {\n        if (!this.utils.isEmpty(answer)) {\n          answer.assessment_question_id = +key.replace('q-', '');\n          answers.push(answer);\n        }\n      });\n    }\n\n    // check if all required questions have answer when assessment done\n    const requiredQuestions = this.compulsoryQuestionsAnswered(answers);\n    if (!saveInProgress && requiredQuestions.length > 0) {\n      this.submitting = false;\n      // display a pop up if required question not answered\n      return this.notificationService.popUp('shortMessage', {\n        message: 'Required question answer missing!'\n      });\n    }\n\n    // save the submission/feedback\n    this.assessmentService.saveAnswers(\n      assessment,\n      answers,\n      this.action,\n      this.submission ? this.submission.id : 0\n    ).subscribe(\n      result => {\n        if (saveInProgress) {\n          this.newRelic.actionText('Saved progress.');\n          // display message for successfull saved answers\n          this.savingMessage = 'Last saved ' + this._getCurrentTime();\n          this.savingButtonDisabled = false;\n        } else {\n          this.newRelic.actionText('Assessment Submitted.');\n          this.submitting = false;\n          this.submitted = true;\n          this.changeStatus.emit({\n            id: +this.id,\n            status: this.assessment.type === 'moderated' ? 'pending review' : 'done'\n          });\n          // disabled all forms controls\n          Object.keys(this.questionsForm.controls).forEach(key => this.questionsForm.controls[key].disable());\n          return this.pullFastFeedback();\n        }\n      },\n      (err: {msg: string}) => {\n        this.newRelic.noticeError(JSON.stringify(err));\n\n        this.submitting = false;\n        this.savingButtonDisabled = false;\n        if (saveInProgress) {\n          // display message when saving answers failed\n          this.savingMessage = 'Auto save unavailable';\n        } else {\n          // display a pop up if submission failed\n          this.notificationService.alert({\n            header: 'Submission failed',\n            message: err.msg || JSON.stringify(err),\n            buttons: [\n              {\n                text: 'OK',\n                role: 'cancel'\n              }\n            ]\n          });\n          throw new Error(err.msg || JSON.stringify(err));\n        }\n      }\n    );\n    // if saveInProgress and isManualSave true renabling save without wait 10 second\n    if (saveInProgress && isManualSave) {\n      this.saving = false;\n    }\n    // if timeout, reset this.saving flag to false, to enable saving again\n    setTimeout(() => this.saving = false, SAVE_PROGRESS_TIMEOUT);\n  }\n\n  /**\n   * Mark review feedback as read\n   */\n  async markReviewFeedbackAsRead(): Promise<void> {\n    // do nothing if feedback is already mark as read\n    if (this.feedbackReviewed) {\n      return;\n    }\n    this.continueBtnLoading = true;\n    let result;\n    this.newRelic.actionText('Waiting for review feedback read.');\n    // Mark feedback as read\n    try {\n      result = await this.assessmentService.saveFeedbackReviewed(this.submission.id).toPromise();\n      this.feedbackReviewed = true;\n      this.newRelic.actionText('Review feedback read.');\n      this.continueBtnLoading = false;\n    } catch (err) {\n      const toasted = await this.notificationService.alert({\n        header: 'Marking feedback as read failed',\n        message: err.msg || JSON.stringify(err)\n      });\n      this.continueBtnLoading = false;\n      throw new Error(err);\n    }\n\n    // After marking feedback as read, popup review rating modal if\n    // 1. review is successfully marked as read (from above)\n    // 2. hasReviewRating (activation): program configuration is set to enable review rating\n    if (!result.success || !this.storage.getUser().hasReviewRating) {\n      return;\n    }\n    this.continueBtnLoading = true;\n    this.newRelic.actionText('Waiting for review rating API response.');\n    try {\n      // display review rating modal\n      await this.assessmentService.popUpReviewRating(this.review.id, false);\n      this.continueBtnLoading = false;\n    } catch (err) {\n      const msg = 'Can not get review rating information';\n      this.newRelic.noticeError(msg);\n      const toasted = await this.notificationService.alert({\n        header: msg,\n        message: err.msg || JSON.stringify(err)\n      });\n      this.continueBtnLoading = false;\n      throw new Error(err);\n    }\n  }\n\n  showQuestionInfo(info) {\n    this.newRelic.actionText('Read question info.');\n    this.notificationService.popUp('shortMessage', {message: info});\n  }\n\n  private _getCurrentTime() {\n    return new Intl.DateTimeFormat('en-GB', {\n      hour12: true,\n      hour: 'numeric',\n      minute: 'numeric'\n    }).format(new Date());\n  }\n\n  hasFooter() {\n    return this.doAssessment || this.doReview || this.footerText();\n  }\n\n  /**\n   * Get the text on the left of the footer.\n   * Return false if it shouldn't be displayed\n   */\n  footerText(): string | boolean {\n    // if it is to do assessment or do review\n    if (this.doAssessment || this.doReview) {\n      if (this.submitting) {\n        return 'submitting';\n      }\n      if (this.submitted) {\n        return 'submitted';\n      }\n      // display the submit button, don't need the text in the footer\n      return false;\n    }\n    if (this.action === 'review') {\n      return false;\n    }\n    if (!this.submission) {\n      return false;\n    }\n    switch (this.submission.status) {\n      case 'published':\n        if (this.feedbackReviewed) {\n          return 'done';\n        }\n        return 'feedback available';\n      case 'pending approval':\n        return 'pending review';\n      default:\n        return this.submission.status;\n    }\n  }\n\n}\n","import { SharedModule } from '@shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AssessmentRoutingModule } from './assessment-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AssessmentComponent } from './assessment.component';\nimport { QuestionsModule } from '../questions/questions.module';\nimport { ActivityModule } from '../activity/activity.module';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    AssessmentRoutingModule,\n    ReactiveFormsModule,\n    QuestionsModule,\n    ActivityModule,\n  ],\n  declarations: [\n    AssessmentComponent\n  ],\n  exports: [\n    SharedModule,\n    ActivityModule,\n    AssessmentComponent\n  ]\n})\n\nexport class AssessmentModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RequestService } from '@shared/request/request.service';\nimport { UtilsService } from '@services/utils.service';\nimport { BrowserStorageService } from '@services/storage.service';\nimport { NotificationService } from '@shared/notification/notification.service';\nimport { ReviewRatingComponent } from '../review-rating/review-rating.component';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @name api\n * @description list of api endpoint involved in this service\n * @type {Object}\n */\nconst api = {\n  post: {\n    submissions: 'api/assessment_submissions.json',\n    reviews: 'api/feedback_submissions.json',\n    todoitem: 'api/v2/motivations/todo_item/edit.json'\n  }\n};\n\nexport interface AssessmentSubmitBody {\n  id: number;\n  in_progress: boolean;\n  context_id?: number;\n  review_id?: number;\n  submission_id?: number;\n  unlock?: boolean;\n}\n\nexport interface Assessment {\n  name: string;\n  type: string;\n  description: string;\n  isForTeam: boolean;\n  dueDate?: string;\n  isOverdue?: boolean;\n  groups: Array<Group>;\n  pulseCheck: boolean;\n}\n\nexport interface Group {\n  name: string;\n  description: string;\n  questions: Array<Question>;\n}\n\nexport interface Question {\n  id: number;\n  name: string;\n  type: string;\n  fileType?: string;\n  description: string;\n  info?: string;\n  isRequired: boolean;\n  canComment: boolean;\n  canAnswer: boolean;\n  choices?: Array<Choice>;\n  teamMembers?: Array<TeamMember>;\n  audience: string[];\n  submitterOnly?: boolean;\n  reviewerOnly?: boolean;\n}\n\nexport interface Choice {\n  id: number;\n  name: string;\n  explanation?: string;\n}\n\nexport interface TeamMember {\n  key: string;\n  userName: string;\n}\n\nexport interface Submission {\n  id: number;\n  status: string;\n  answers: any;\n  submitterName: string;\n  modified: string;\n  isLocked: boolean;\n  completed?: boolean;\n  submitterImage: string;\n  reviewerName: string | void;\n}\n\nexport interface Review {\n  id: number;\n  answers: any;\n  status: string;\n  modified: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AssessmentService {\n  questions = {};\n\n  constructor(\n    private request: RequestService,\n    private utils: UtilsService,\n    private storage: BrowserStorageService,\n    private notification: NotificationService,\n    public sanitizer: DomSanitizer,\n  ) {}\n\n  getAssessment(id, action, activityId, contextId, submissionId?) {\n    return this.request.postGraphQL(\n      this.utils.graphQLQueryStringFormatter(\n        `\"{\n          assessment(id:` + id + `,reviewer:` + (action === 'review') + `,activityId:` + activityId + `) {\n            name type description dueDate isTeam pulseCheck\n            groups{\n              name description\n              questions{\n                id name description type isRequired hasComment audience fileType\n                choices{\n                  id name explanation description\n                }\n                teamMembers{\n                  userId userName teamId\n                }\n              }\n            }\n            submissions(` + (submissionId ? `id:` + submissionId : `contextId:` + contextId) + `) {\n              id status completed modified locked\n              submitter {\n                name image\n              }\n              answers{\n                questionId answer\n              }\n              review {\n                id status modified\n                reviewer { name }\n                answers {\n                  questionId answer comment\n                }\n              }\n            }\n          }\n        }\"`)\n      )\n      .pipe(map(res => {\n        return {\n          assessment: this._normaliseAssessment(res.data, action),\n          submission: this._normaliseSubmission(res.data),\n          review: this._normaliseReview(res.data, action)\n        };\n      }));\n  }\n\n  private _normaliseAssessment(data, action): Assessment {\n    if (!data.assessment) {\n      return null;\n    }\n    const assessment = {\n      name: data.assessment.name,\n      type: data.assessment.type,\n      description: data.assessment.description,\n      isForTeam: data.assessment.isTeam,\n      dueDate: data.assessment.dueDate,\n      isOverdue: data.assessment.dueDate ? this.utils.timeComparer(data.assessment.dueDate) < 0 : false,\n      pulseCheck: data.assessment.pulseCheck,\n      groups: []\n    };\n    data.assessment.groups.forEach(eachGroup => {\n      const questions: Question[] = [];\n      if (!eachGroup.questions) {\n        return;\n      }\n      eachGroup.questions.forEach(eachQuestion => {\n        this.questions[eachQuestion.id] = eachQuestion;\n        const question: Question = {\n          id: eachQuestion.id,\n          name: eachQuestion.name,\n          type: eachQuestion.type,\n          description: eachQuestion.description,\n          isRequired: eachQuestion.isRequired,\n          canComment: eachQuestion.hasComment,\n          canAnswer: action === 'review' ? eachQuestion.audience.includes('reviewer') : eachQuestion.audience.includes('submitter'),\n          audience: eachQuestion.audience,\n          submitterOnly: eachQuestion.audience.length === 1 && eachQuestion.audience.includes('submitter'),\n          reviewerOnly: eachQuestion.audience.length === 1 && eachQuestion.audience.includes('reviewer')\n        };\n        switch (eachQuestion.type) {\n          case 'oneof':\n          case 'multiple':\n            const choices: Choice[] = [];\n            let info = '';\n            eachQuestion.choices.forEach(eachChoice => {\n              choices.push({\n                id: eachChoice.id,\n                name: eachChoice.name,\n                explanation: eachChoice.explanation || null,\n              });\n              if (eachChoice.description) {\n                info += '<p>' + eachChoice.name + ' - ' + eachChoice.description + '</p>';\n              }\n            });\n            if (info) {\n              // add the title\n              info = '<h3>Choice Description:</h3>' + info;\n            }\n            question.info = info;\n            question.choices = choices;\n            break;\n\n          case 'file':\n            question.fileType = eachQuestion.fileType;\n            break;\n\n          case 'team member selector':\n            question.teamMembers = [];\n            eachQuestion.teamMembers.forEach(eachTeamMember => {\n              question.teamMembers.push({\n                key: JSON.stringify(eachTeamMember),\n                userName: eachTeamMember.userName\n              });\n            });\n            break;\n        }\n        questions.push(question);\n      });\n      if (!this.utils.isEmpty(questions)) {\n        assessment.groups.push({\n          name: eachGroup.name,\n          description: eachGroup.description,\n          questions: questions\n        });\n      }\n    });\n    return assessment;\n  }\n\n  private _normaliseSubmission(data): Submission {\n    if (!this.utils.has(data, 'assessment.submissions') || data.assessment.submissions.length < 1) {\n      return null;\n    }\n    const firstSubmission = data.assessment.submissions[0];\n    let submission: Submission = {\n      id: firstSubmission.id,\n      status: firstSubmission.status,\n      submitterName: firstSubmission.submitter.name,\n      submitterImage: firstSubmission.submitter.image,\n      modified: firstSubmission.modified,\n      isLocked: firstSubmission.locked,\n      completed: firstSubmission.completed,\n      reviewerName: firstSubmission.review ? this.checkReviewer(firstSubmission.review.reviewer) : null,\n      answers: {}\n    };\n    firstSubmission.answers.forEach(eachAnswer => {\n      eachAnswer.answer = this._normaliseAnswer(eachAnswer.questionId, eachAnswer.answer);\n      submission.answers[eachAnswer.questionId] = {\n        answer: eachAnswer.answer\n      };\n      if (['published', 'done'].includes(submission.status)) {\n        submission = this._addChoiceExplanation(eachAnswer, submission);\n      }\n    });\n    return submission;\n  }\n\n  private _normaliseReview(data, action): Review {\n    if (!this.utils.has(data, 'assessment.submissions') || data.assessment.submissions.length < 1) {\n      return null;\n    }\n    const firstSubmission = data.assessment.submissions[0];\n    const firstSubmissionReview = firstSubmission.review;\n    if (!firstSubmissionReview) {\n      return null;\n    }\n    const review: Review = {\n      id: firstSubmissionReview.id,\n      status: firstSubmissionReview.status,\n      modified: firstSubmissionReview.modified,\n      answers: {}\n    };\n\n    // only get the review answer if the review is published, or it is for the reviewer to see the review\n    // i.e. don't display the review answer if it is for submitter and review not published yet\n    if (firstSubmission.status !== 'published' && action === 'assessment') {\n      return review;\n    }\n\n    firstSubmissionReview.answers.forEach(eachAnswer => {\n      eachAnswer.answer = this._normaliseAnswer(eachAnswer.questionId, eachAnswer.answer);\n      review.answers[eachAnswer.questionId] = {\n        answer: eachAnswer.answer,\n        comment: eachAnswer.comment\n      };\n    });\n    return review;\n  }\n\n  /**\n   * For each question that has choice (oneof & multiple), show the choice explanation in the submission if it is not empty\n   */\n  private _addChoiceExplanation(submissionAnswer, submission: Submission): Submission {\n    const questionId = submissionAnswer.questionId;\n    const answer = submissionAnswer.answer;\n    // don't do anything if there's no choices\n    if (this.utils.isEmpty(this.questions[questionId].choices)) {\n      return submission;\n    }\n    let explanation = '';\n    if (Array.isArray(answer)) {\n      // multiple question\n      this.questions[questionId].choices.forEach(choice => {\n        // only display the explanation if it is not empty\n        if (answer.includes(choice.id) && !this.utils.isEmpty(choice.explanation)) {\n          explanation += choice.name + ' - ' + choice.explanation + '\\n';\n        }\n      });\n    } else {\n      // oneof question\n      this.questions[questionId].choices.forEach(choice => {\n        // only display the explanation if it is not empty\n        if (answer === choice.id && !this.utils.isEmpty(choice.explanation)) {\n          explanation = choice.explanation;\n        }\n      });\n    }\n    if (!explanation) {\n      return submission;\n    }\n    // put the explanation in the submission\n    const thisExplanation = explanation.replace(/text-align: center;/gi, 'text-align: center; text-align: -webkit-center;');\n    submission.answers[questionId].explanation = this.sanitizer.bypassSecurityTrustHtml(thisExplanation);\n\n    return submission;\n  }\n\n  private _normaliseAnswer(questionId, answer) {\n    if (this.questions[questionId]) {\n      switch (this.questions[questionId].type) {\n        case 'oneof':\n          // re-format answer from string to number\n          if (typeof answer === 'string' && answer.length === 0) {\n            // Caution: let answer be null if question wasn't answered previously, 0 could be a possible answer ID\n            answer = null;\n          } else {\n            answer = +answer;\n          }\n          break;\n        case 'multiple':\n          if (this.utils.isEmpty(answer)) {\n            answer = [];\n          }\n          if (!Array.isArray(answer)) {\n            // re-format json string to array\n            answer = JSON.parse(answer);\n          }\n          // re-format answer from string to number\n          answer = answer.map(value => {\n            return +value;\n          });\n          break;\n      }\n    }\n    return answer;\n  }\n\n  saveAnswers(assessment: AssessmentSubmitBody, answers: object, action: string, submissionId?: number) {\n    let postData;\n    switch (action) {\n      case 'assessment':\n        postData = {\n          Assessment: assessment,\n          AssessmentSubmissionAnswer: answers\n        };\n        if (submissionId) {\n          postData.AssessmentSubmission = {\n            id: submissionId\n          };\n        }\n        return this.request.post(api.post.submissions, postData);\n\n      case 'review':\n        postData = {\n          Assessment: assessment,\n          AssessmentReviewAnswer: answers\n        };\n        return this.request.post(api.post.reviews, postData);\n    }\n    return of({\n      success: false\n    });\n  }\n\n  saveFeedbackReviewed(submissionId) {\n    const postData = {\n      project_id: this.storage.getUser().projectId,\n      identifier: 'AssessmentSubmission-' + submissionId,\n      is_done: true\n    };\n    return this.request.post(api.post.todoitem, postData);\n  }\n\n  popUpReviewRating(reviewId, redirect): Promise<void> {\n    return this.notification.modal(ReviewRatingComponent, {\n      reviewId,\n      redirect\n    });\n  }\n\n  checkReviewer(reviewer): string {\n    if (!reviewer) {\n      return null;\n    }\n    return reviewer.name !== this.storage.getUser().name ? reviewer.name : null;\n  }\n\n}\n","export default \"video {\\n  width: 100%;\\n}\\n\\n.warning {\\n  font-weight: 400;\\n  font-size: 16px;\\n  white-space: normal;\\n}\\n\\n.file-details {\\n  --ion-grid-column-padding: 0;\\n  --ion-grid-padding: 0;\\n  margin-top: 12px;\\n}\\n\\n.file-details ion-icon {\\n  font-size: 24px;\\n}\\n\\n.file-details .action-buttons-container {\\n  text-align: center;\\n}\\n\\n.file-details .action-buttons-container ion-icon {\\n  cursor: pointer;\\n}\\n\\n.file-name-container p {\\n  white-space: nowrap;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9xdWVzdGlvbnMvZmlsZS9maWxlLWRpc3BsYXkvZmlsZS1kaXNwbGF5LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9xdWVzdGlvbnMvZmlsZS9maWxlLWRpc3BsYXkvZmlsZS1kaXNwbGF5LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQ0NGOztBREVBO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUNDRjs7QURFQTtFQUNFLDRCQUFBO0VBQ0EscUJBQUE7RUFDQSxnQkFBQTtBQ0NGOztBREFFO0VBQ0UsZUFBQTtBQ0VKOztBRENFO0VBQ0Usa0JBQUE7QUNDSjs7QURBSTtFQUNFLGVBQUE7QUNFTjs7QURLRTtFQUNFLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxnQkFBQTtBQ0ZKIiwiZmlsZSI6InNyYy9hcHAvcXVlc3Rpb25zL2ZpbGUvZmlsZS1kaXNwbGF5L2ZpbGUtZGlzcGxheS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbInZpZGVvIHtcbiAgd2lkdGg6IDEwMCVcbn1cblxuLndhcm5pbmcge1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXNpemU6IDE2cHg7XG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG59XG5cbi5maWxlLWRldGFpbHMge1xuICAtLWlvbi1ncmlkLWNvbHVtbi1wYWRkaW5nOiAwO1xuICAtLWlvbi1ncmlkLXBhZGRpbmc6IDA7XG4gIG1hcmdpbi10b3A6IDEycHg7XG4gIGlvbi1pY29uIHtcbiAgICBmb250LXNpemU6IDI0cHg7XG4gIH1cblxuICAuYWN0aW9uLWJ1dHRvbnMtY29udGFpbmVyIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgaW9uLWljb24ge1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbiAgfVxuXG59XG5cbi5maWxlLW5hbWUtY29udGFpbmVyIHtcbiAgcCB7XG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICB9XG59XG4iLCJ2aWRlbyB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4ud2FybmluZyB7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxuLmZpbGUtZGV0YWlscyB7XG4gIC0taW9uLWdyaWQtY29sdW1uLXBhZGRpbmc6IDA7XG4gIC0taW9uLWdyaWQtcGFkZGluZzogMDtcbiAgbWFyZ2luLXRvcDogMTJweDtcbn1cbi5maWxlLWRldGFpbHMgaW9uLWljb24ge1xuICBmb250LXNpemU6IDI0cHg7XG59XG4uZmlsZS1kZXRhaWxzIC5hY3Rpb24tYnV0dG9ucy1jb250YWluZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4uZmlsZS1kZXRhaWxzIC5hY3Rpb24tYnV0dG9ucy1jb250YWluZXIgaW9uLWljb24ge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5maWxlLW5hbWUtY29udGFpbmVyIHAge1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn0iXX0= */\"","import { Component, Input, Output, OnInit, OnChanges, SimpleChanges , ViewChild, ElementRef, EventEmitter} from '@angular/core';\nimport { FilestackService } from '@shared/filestack/filestack.service';\nimport { UtilsService } from '@services/utils.service';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-file-display',\n  templateUrl: 'file-display.component.html',\n  styleUrls: ['file-display.component.scss']\n})\nexport class FileDisplayComponent implements OnInit, OnChanges {\n  private virusDetection: any;\n  private quarantine: any;\n\n  @Input() fileType = 'any';\n  @Input() file: any;\n  @Input() isFileComponent?: boolean;\n  @ViewChild('videoEle') videoEle: ElementRef;\n  @Output() removeFile?: EventEmitter<any> = new EventEmitter();\n  @Input() disabled?: boolean;\n\n  constructor(private filestackService: FilestackService, private utils: UtilsService) { }\n\n  ngOnInit() {\n    if (this.file && this.file.workflows) {\n      this.updateWorkflowStatus();\n    }\n  }\n\n  updateWorkflowStatus(file?) {\n    this._resetUILogic();\n    // don't do virus detection on development environment\n    if (!environment.production) {\n      return ;\n    }\n    const currentFile = file || this.file;\n    this.filestackService.getWorkflowStatus(currentFile.workflows).then(responds => {\n      this.utils.each((responds || []), res => {\n        const { results, status } = res;\n\n        if (status.toLowerCase() === 'finished') { // status: Finished / InProgress\n          const { virus_detection, quarantine } = results;\n\n          if (this.utils.isEmpty(this.virusDetection) && virus_detection && virus_detection.data) {\n            this.virusDetection = virus_detection.data;\n          }\n\n          if (this.utils.isEmpty(this.quarantine) && quarantine && quarantine.data) {\n            this.quarantine = quarantine.data;\n          }\n        }\n      });\n    });\n  }\n\n  private _resetUILogic() {\n    this.virusDetection = {};\n    this.quarantine = {};\n    if (this.videoEle) {\n      this.videoEle.nativeElement.load();\n    }\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    if (change.file && change.file.currentValue && change.file.currentValue.workflows) {\n      this.updateWorkflowStatus(change.file.currentValue);\n    }\n  }\n\n  async previewFile(file) {\n    try {\n      return await this.filestackService.previewFile(file);\n    } catch (err) {\n      return err;\n    }\n  }\n\n  removeUploadedFile() {\n    this.removeFile.emit(true);\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9ucy9maWxlL2ZpbGUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input, Output, EventEmitter, forwardRef, ViewChild, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\nimport { FilestackService } from '@shared/filestack/filestack.service';\n\n@Component({\n  selector: 'app-file',\n  templateUrl: 'file.component.html',\n  styleUrls: ['file.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => FileComponent),\n    }\n  ]\n})\nexport class FileComponent implements ControlValueAccessor, OnInit {\n\n  @Input() question = {\n    name: '',\n    description: '',\n    isRequired: false,\n    fileType: 'any'\n  };\n  @Input() submission;\n  @Input() review;\n  // this is for review status\n  @Input() reviewStatus;\n  // this is for assessment status\n  @Input() submissionStatus;\n  // this is for doing an assessment or not\n  @Input() doAssessment: Boolean;\n  // this is for doing review or not\n  @Input() doReview: Boolean;\n  // FormControl that is passed in from parent component\n  @Input() control: FormControl;\n  // answer field for submitter & reviewer\n  @ViewChild('answer') answerRef: ElementRef;\n  // comment field for reviewer\n  @ViewChild('commentEle') commentRef: ElementRef;\n  // call back for save changes\n  @Output() saveProgress = new EventEmitter<boolean>();\n\n  uploadedFile;\n  fileTypes = '';\n\n  // the value of answer\n  innerValue: any;\n  comment: string;\n  // validation errors array\n  errors: Array<any> = [];\n\n  constructor(\n    private filestackService: FilestackService\n  ) {}\n\n  ngOnInit() {\n    this.fileTypes = this.filestackService.getFileTypes(this.question.fileType);\n    this._showSavedAnswers();\n  }\n\n  // propagate changes into the form control\n  propagateChange = (_: any) => {};\n\n  onFileUploadCompleted(file, type = null) {\n    if (file.success) {\n      // reset errors\n      this.errors = [];\n      // currently we only support one file upload per question,\n      // if we need to support multiple file upload later, we need to change this to:\n      // this.uploadedFiles = push(file.data);\n      this.uploadedFile = file.data;\n      this.onChange('', type);\n    } else {\n      // display error message for user\n      // if error is drag and drop error will show a custom message. ex:- nore than one file droped, invalid file type droped.\n      if (file.data.isDragAndDropError) {\n        this.errors.push(`${file.data.message}, please try again.`);\n      } else {\n        this.errors.push('File upload failed, please try again later.');\n      }\n    }\n  }\n\n  // event fired when file is uploaded. propagate the change up to the form control using the custom value accessor interface\n  // if 'type' is set, it means it comes from reviewer doing review, otherwise it comes from submitter doing assessment\n  onChange(value, type) {\n    // set changed value (answer or comment)\n    if (type) {\n      if (!this.innerValue) {\n        this.innerValue = {\n          answer: {},\n          comment: ''\n        };\n      }\n      if (type === 'comment') {\n        // just pass the value for comment since comment is always just text\n        this.innerValue.comment = value;\n      } else {\n        this.innerValue.answer = this.uploadedFile;\n      }\n    } else {\n      // this is for submitter, just pass the uploaded file as the answer\n      this.innerValue = this.uploadedFile;\n    }\n\n    // propagate value into form control using control value accessor interface\n    this.propagateChange(this.innerValue);\n    this.saveProgress.emit(true);\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n\n  }\n\n  // adding save values to from control\n  private _showSavedAnswers() {\n    if ((this.reviewStatus === 'in progress') && (this.doReview)) {\n      this.innerValue = {\n        answer: {},\n        comment: ''\n      };\n      this.innerValue.comment = this.review.comment;\n      this.comment = this.review.comment;\n      this.innerValue.answer = this.review.answer;\n    }\n    if ((this.submissionStatus === 'in progress') && (this.doAssessment)) {\n      this.innerValue = this.submission.answer;\n    }\n    this.propagateChange(this.innerValue);\n    this.control.setValue(this.innerValue);\n  }\n\n  removeSubmitFile(data) {\n    this.uploadedFile = null;\n    this.submission.answer = null;\n    this.onChange('', null);\n  }\n\n}\n","export default \"ion-item ion-label {\\n  opacity: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9xdWVzdGlvbnMvbXVsdGlwbGUvbXVsdGlwbGUuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3F1ZXN0aW9ucy9tdWx0aXBsZS9tdWx0aXBsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbnMvbXVsdGlwbGUvbXVsdGlwbGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbSBpb24tbGFiZWwge1xuICAgIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbn0iLCJpb24taXRlbSBpb24tbGFiZWwge1xuICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, Input, Output, EventEmitter, forwardRef, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\nimport { UtilsService } from '@services/utils.service';\n\n@Component({\n  selector: 'app-multiple',\n  templateUrl: 'multiple.component.html',\n  styleUrls: ['multiple.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => MultipleComponent),\n    }\n  ]\n})\nexport class MultipleComponent implements ControlValueAccessor, OnInit {\n\n  @Input() question;\n  @Input() submission;\n  @Input() review;\n  // this is for review status\n  @Input() reviewStatus;\n  // this is for assessment status\n  @Input() submissionStatus;\n  // this is for doing an assessment or not\n  @Input() doAssessment: Boolean;\n  // this is for doing review or not\n  @Input() doReview: Boolean;\n  // FormControl that is passed in from parent component\n  @Input() control: FormControl;\n  // answer field for submitter & reviewer\n  @ViewChild('answer') answerRef: ElementRef;\n  // comment field for reviewer\n  @ViewChild('commentEle') commentRef: ElementRef;\n  // call back for save changes\n  @Output() saveProgress = new EventEmitter<boolean>();\n\n  // the value of answer\n  innerValue: any;\n  comment: string;\n  // validation errors array\n  errors: Array<any> = [];\n\n  constructor(\n    private utils: UtilsService\n  ) {}\n\n  ngOnInit() {\n    this._showSavedAnswers();\n  }\n\n  // propagate changes into the form control\n  propagateChange = (_: any) => {};\n\n  // event fired when checkbox is selected/unselected. propagate the change up to the form control using the custom value accessor interface\n  // if 'type' is set, it means it comes from reviewer doing review, otherwise it comes from submitter doing assessment\n  onChange(value, type) {\n    // innerValue should be either array or object, if it is a string, parse it\n    if (typeof this.innerValue === 'string') {\n      this.innerValue = JSON.parse(this.innerValue);\n    }\n    // set changed value (answer or comment)\n    if (type) {\n      // initialise innerValue if not set\n      if (!this.innerValue) {\n        this.innerValue = {\n          answer: [],\n          comment: ''\n        };\n      }\n      if (type === 'comment') {\n        // just pass the value for comment since comment is always just text\n        this.innerValue.comment = value;\n      } else {\n        this.innerValue.answer = this.utils.addOrRemove(this.innerValue.answer, value);\n      }\n    } else {\n      if (!this.innerValue) {\n        this.innerValue = [];\n      }\n      this.innerValue = this.utils.addOrRemove(this.innerValue, value);\n    }\n\n    // propagate value into form control using control value accessor interface\n    this.propagateChange(this.innerValue);\n\n    // reset errors\n    this.errors = [];\n    // setting, resetting error messages into an array (to loop) and adding the validation messages to show below the answer area\n    for (const key in this.control.errors) {\n      if (key === 'required') {\n        this.errors.push('This question is required');\n      } else {\n        this.errors.push(this.control.errors[key]);\n      }\n    }\n    this.saveProgress.emit(true);\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value) {\n      this.innerValue = JSON.stringify(value);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n\n  }\n  // adding save values to from control\n  private _showSavedAnswers() {\n    if ((this.reviewStatus === 'in progress') && (this.doReview)) {\n      this.innerValue = {\n        answer: this.review.answer,\n        comment: this.review.comment\n      };\n      this.comment = this.review.comment;\n    }\n    if ((this.submissionStatus === 'in progress') && (this.doAssessment)) {\n      this.innerValue = this.submission.answer;\n    }\n    this.propagateChange(this.innerValue);\n    this.control.setValue(this.innerValue);\n  }\n\n}\n","export default \"ion-radio-group ion-item ion-label {\\n  opacity: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9xdWVzdGlvbnMvb25lb2Yvb25lb2YuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3F1ZXN0aW9ucy9vbmVvZi9vbmVvZi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbnMvb25lb2Yvb25lb2YuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG59XG4iLCJpb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, Input, Output, EventEmitter, forwardRef, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\nimport { UtilsService } from '@services/utils.service';\n\n@Component({\n  selector: 'app-oneof',\n  templateUrl: 'oneof.component.html',\n  styleUrls: ['oneof.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => OneofComponent),\n    }\n  ]\n})\nexport class OneofComponent implements ControlValueAccessor, OnInit {\n\n  @Input() question;\n  @Input() submission;\n  @Input() review;\n  // this is for review status\n  @Input() reviewStatus;\n  // this is for assessment status\n  @Input() submissionStatus;\n  // this is for doing an assessment or not\n  @Input() doAssessment: Boolean;\n  // this is for doing review or not\n  @Input() doReview: Boolean;\n  // FormControl that is passed in from parent component\n  @Input() control: FormControl;\n  // answer field for submitter & reviewer\n  @ViewChild('answerEle') answerRef: ElementRef;\n  // comment field for reviewer\n  @ViewChild('commentEle') commentRef: ElementRef;\n  // call back for save changes\n  @Output() saveProgress = new EventEmitter<boolean>();\n\n  // the value of answer\n  innerValue: any;\n  comment: string;\n  // validation errors array\n  errors: Array<any> = [];\n\n  constructor(private utils: UtilsService) {}\n\n  ngOnInit() {\n    this._showSavedAnswers();\n  }\n  // propagate changes into the form control\n  propagateChange = (_: any) => {};\n\n  // event fired when radio is selected. propagate the change up to the form control using the custom value accessor interface\n  // if 'type' is set, it means it comes from reviewer doing review, otherwise it comes from submitter doing assessment\n  onChange(value, type) {\n    // set changed value (answer or comment)\n    if (type) {\n      // initialise innerValue if not set\n      if (!this.innerValue) {\n        this.innerValue = {\n          answer: '',\n          comment: ''\n        };\n      }\n      this.innerValue[type] = value;\n    } else {\n      this.innerValue = value;\n    }\n\n    // propagate value into form control using control value accessor interface\n    this.propagateChange(this.innerValue);\n\n    // reset errors\n    this.errors = [];\n    // setting, resetting error messages into an array (to loop) and adding the validation messages to show below the answer area\n    for (const key in this.control.errors) {\n      if (key === 'required') {\n        this.errors.push('This question is required');\n      } else {\n        this.errors.push(this.control.errors[key]);\n      }\n    }\n    this.saveProgress.emit(true);\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n\n  }\n\n  // adding save values to from control\n  private _showSavedAnswers() {\n    if ((this.reviewStatus === 'in progress') && (this.doReview)) {\n      this.innerValue = {\n        answer: '',\n        comment: ''\n      };\n      this.innerValue.comment = this.review.comment;\n      this.comment = this.review.comment;\n      this.innerValue.answer = this.review.answer;\n    }\n    if ((this.submissionStatus === 'in progress') && (this.doAssessment)) {\n      this.innerValue = this.submission.answer;\n    }\n    this.propagateChange(this.innerValue);\n    this.control.setValue(this.innerValue);\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\n\n@Component({\n  selector: 'app-questions',\n  template: '<ion-router-outlet></ion-router-outlet>'\n})\nexport class QuestionsComponent implements OnInit {\n\n  constructor (\n  ) {}\n\n  ngOnInit() {\n  }\n\n\n}\n","import { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { QuestionsComponent } from './questions.component';\nimport { TextComponent } from './text/text.component';\nimport { OneofComponent } from './oneof/oneof.component';\nimport { MultipleComponent } from './multiple/multiple.component';\nimport { FileComponent } from './file/file.component';\nimport { TeamMemberSelectorComponent } from './team-member-selector/team-member-selector.component';\nimport { FileDisplayComponent } from './file/file-display/file-display.component';\nimport { FilestackModule } from '@shared/filestack/filestack.module';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    FilestackModule,\n    SharedModule\n  ],\n  declarations: [\n    QuestionsComponent,\n    TextComponent,\n    OneofComponent,\n    MultipleComponent,\n    FileComponent,\n    TeamMemberSelectorComponent,\n    FileDisplayComponent\n  ],\n  exports: [\n    TextComponent,\n    OneofComponent,\n    MultipleComponent,\n    FileComponent,\n    TeamMemberSelectorComponent\n  ]\n\n})\nexport class QuestionsModule {\n}\n","export default \"ion-radio-group ion-item ion-label {\\n  opacity: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9xdWVzdGlvbnMvdGVhbS1tZW1iZXItc2VsZWN0b3IvdGVhbS1tZW1iZXItc2VsZWN0b3IuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3F1ZXN0aW9ucy90ZWFtLW1lbWJlci1zZWxlY3Rvci90ZWFtLW1lbWJlci1zZWxlY3Rvci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9xdWVzdGlvbnMvdGVhbS1tZW1iZXItc2VsZWN0b3IvdGVhbS1tZW1iZXItc2VsZWN0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tcmFkaW8tZ3JvdXAgaW9uLWl0ZW0gaW9uLWxhYmVsIHtcbiAgICBvcGFjaXR5OiAxICFpbXBvcnRhbnQ7XG59IiwiaW9uLXJhZGlvLWdyb3VwIGlvbi1pdGVtIGlvbi1sYWJlbCB7XG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, Input, Output, EventEmitter, forwardRef, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-team-member-selector',\n  templateUrl: 'team-member-selector.component.html',\n  styleUrls: ['team-member-selector.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => TeamMemberSelectorComponent),\n    }\n  ]\n})\nexport class TeamMemberSelectorComponent implements ControlValueAccessor, OnInit {\n\n  @Input() question;\n  @Input() submission;\n  @Input() review;\n  // this is for review status\n  @Input() reviewStatus;\n  // this is for assessment status\n  @Input() submissionStatus;\n  // this is for doing an assessment or not\n  @Input() doAssessment: Boolean;\n  // this is for doing review or not\n  @Input() doReview: Boolean;\n  // FormControl that is passed in from parent component\n  @Input() control: FormControl;\n  // answer field for submitter & reviewer\n  @ViewChild('answerEle') answerRef: ElementRef;\n  // comment field for reviewer\n  @ViewChild('commentEle') commentRef: ElementRef;\n  // call back for save changes\n  @Output() saveProgress = new EventEmitter<boolean>();\n\n  // the value of answer\n  innerValue: any;\n  comment: string;\n  // validation errors array\n  errors: Array<any> = [];\n\n  constructor() {}\n\n  ngOnInit() {\n    this._showSavedAnswers();\n  }\n  // propagate changes into the form control\n  propagateChange = (_: any) => {};\n\n  // event fired when radio is selected. propagate the change up to the form control using the custom value accessor interface\n  // if 'type' is set, it means it comes from reviewer doing review, otherwise it comes from submitter doing assessment\n  onChange(value, type) {\n    // set changed value (answer or comment)\n    if (type) {\n      // initialise innerValue if not set\n      if (!this.innerValue) {\n        this.innerValue = {\n          answer: '',\n          comment: ''\n        };\n      }\n      this.innerValue[type] = value;\n    } else {\n      this.innerValue = value;\n    }\n\n    // propagate value into form control using control value accessor interface\n    this.propagateChange(this.innerValue);\n\n    // reset errors\n    this.errors = [];\n    // setting, resetting error messages into an array (to loop) and adding the validation messages to show below the answer area\n    for (const key in this.control.errors) {\n      if (key === 'required') {\n        this.errors.push('This question is required');\n      } else {\n        this.errors.push(this.control.errors[key]);\n      }\n    }\n    this.saveProgress.emit(true);\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n\n  }\n\n  // adding save values to from control\n  private _showSavedAnswers() {\n    if ((this.reviewStatus === 'in progress') && (this.doReview)) {\n      this.innerValue = {\n        answer: '',\n        comment: ''\n      };\n      this.innerValue.comment = this.review.comment;\n      this.comment = this.review.comment;\n      this.innerValue.answer = this.review.answer;\n    }\n    if ((this.submissionStatus === 'in progress') && (this.doAssessment)) {\n      this.innerValue = this.submission.answer;\n    }\n    this.propagateChange(this.innerValue);\n    this.control.setValue(this.innerValue);\n  }\n}\n","export default \"ion-textarea {\\n  padding-left: 5px;\\n  padding-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9xdWVzdGlvbnMvdGV4dC90ZXh0LmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9xdWVzdGlvbnMvdGV4dC90ZXh0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksaUJBQUE7RUFDQSxrQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcXVlc3Rpb25zL3RleHQvdGV4dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi10ZXh0YXJlYSB7XG4gICAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICAgcGFkZGluZy1yaWdodDogNXB4O1xufSIsImlvbi10ZXh0YXJlYSB7XG4gIHBhZGRpbmctbGVmdDogNXB4O1xuICBwYWRkaW5nLXJpZ2h0OiA1cHg7XG59Il19 */\"","import { Component, Input, Output, EventEmitter, forwardRef, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-text',\n  templateUrl: 'text.component.html',\n  styleUrls: ['text.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => TextComponent),\n    }\n  ]\n})\nexport class TextComponent implements ControlValueAccessor, OnInit {\n\n  @Input() question;\n  @Input() submission;\n  @Input() review;\n  // this is for review status\n  @Input() reviewStatus;\n  // this is for assessment status\n  @Input() submissionStatus;\n  // this is for doing an assessment or not\n  @Input() doAssessment: Boolean;\n  // this is for doing review or not\n  @Input() doReview: Boolean;\n  // FormControl that is passed in from parent component\n  @Input() control: FormControl;\n  // answer field for submitter & reviewer\n  @ViewChild('answerEle') answerRef: ElementRef;\n  // comment field for reviewer\n  @ViewChild('commentEle') commentRef: ElementRef;\n  // call back for save changes\n  @Output() saveProgress = new EventEmitter<boolean>();\n\n  // the value of answer &| comment\n  innerValue: any;\n  answer = '';\n  comment: string;\n  // validation errors array\n  errors: Array<any> = [];\n\n  constructor() {}\n\n  ngOnInit() {\n    this._showSavedAnswers();\n  }\n\n  // propagate changes into the form control\n  propagateChange = (_: any) => {};\n\n  // fix IE/Edge text reversal issue\n  onFocus(event) {\n    const isIEOrEdge = /msie\\s|trident\\/|edge\\//i.test(window.navigator.userAgent);\n    if (isIEOrEdge) {\n      const textarea: HTMLTextAreaElement = event.target.firstChild;\n      const existingText = textarea.value;\n      if (textarea.value.length === 0) {\n        textarea.value = 'a';\n        textarea.setSelectionRange(textarea.value.length, textarea.value.length);\n        textarea.value = '';\n      } else {\n        textarea.setSelectionRange(textarea.value.length, textarea.value.length);\n        textarea.value = '';\n        textarea.value = existingText;\n      }\n    }\n  }\n\n\n  // event fired when input/textarea value is changed. propagate the change up to the form control using the custom value accessor interface\n  // if 'type' is set, it means it comes from reviewer doing review, otherwise it comes from submitter doing assessment\n  onChange(type = null) {\n    // set changed value (answer or comment)\n    if (type) {\n      // initialise innerValue if not set\n      if (!this.innerValue) {\n        this.innerValue = {\n          answer: '',\n          comment: ''\n        };\n      }\n      this.innerValue[type] = this[type];\n    } else {\n      this.innerValue = this.answer;\n    }\n\n    // propagate value into form control using control value accessor interface\n    this.propagateChange(this.innerValue);\n\n    this.saveProgress.emit(true);\n\n    // 05/02/2019\n    // Don't check \"is required\" error for now, it has some error.\n    // Since we are checking required answer when submit, it's OK to just return here.\n    return ;\n    // reset errors\n    // this.errors = [];\n    // setting, resetting error messages into an array (to loop) and adding the validation messages to show below the answer area\n    // for (const key in this.control.errors) {\n    //   if (key === 'required') {\n    //     this.errors.push('This question is required');\n    //   } else {\n    //     this.errors.push(this.control.errors[key]);\n    //   }\n    // }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value) {\n      this.innerValue = value;\n    }\n  }\n\n  // From ControlValueAccessor interface\n  registerOnChange(fn: any) {\n    this.propagateChange = fn;\n  }\n\n  // From ControlValueAccessor interface\n  registerOnTouched(fn: any) {\n\n  }\n\n  // adding save values to from control\n  private _showSavedAnswers() {\n    if ((this.reviewStatus === 'in progress') && (this.doReview)) {\n      this.innerValue = {\n        answer: [],\n        comment: ''\n      };\n      this.innerValue.comment = this.review.comment;\n      this.comment = this.review.comment;\n      this.innerValue.answer = this.review.answer;\n      this.answer = this.review.answer;\n    }\n    if ((this.submissionStatus === 'in progress') && (this.doAssessment)) {\n      this.innerValue = this.submission.answer;\n      this.answer = this.submission.answer;\n    }\n    this.propagateChange(this.innerValue);\n    this.control.setValue(this.innerValue);\n  }\n\n\n\n}\n"],"sourceRoot":"webpack:///"}