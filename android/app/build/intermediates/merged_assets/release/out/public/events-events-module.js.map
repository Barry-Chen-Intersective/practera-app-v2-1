{"version":3,"sources":["./src/app/event-list/event-list.component.html","./src/app/events/events.component.html","./src/app/event-list/event-list.component.scss","./src/app/event-list/event-list.component.ts","./src/app/event-list/event-list.module.ts","./src/app/events/events-routing.component.ts","./src/app/events/events-routing.module.ts","./src/app/events/events.component.scss","./src/app/events/events.component.ts","./src/app/events/events.module.ts"],"names":[],"mappings":"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","file":"events-events-module.js","sourcesContent":["export default \"<ion-header mode=\\\"ios\\\">\\n  <ion-toolbar [ngClass]=\\\"{'ion-toolbar-absolute': !utils.isMobile()}\\\">\\n    <ion-title class=\\\"ion-text-center\\\">Events</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content color=\\\"light\\\" class=\\\"ion-text-center ion-padding\\\" [ngClass]=\\\"{\\n  'ion-content-absolute': !utils.isMobile(),\\n  'ion-content-mobile': utils.isMobile()\\n}\\\" appFloat>\\n\\n  <div class=\\\"btn-filter\\\">\\n    <ion-button\\n      class=\\\"btn-left-half\\\"\\n      [ngClass]=\\\"{'btn-activated': activated == 'browse'}\\\"\\n      (click)=\\\"showBrowse()\\\">\\n      <ion-ripple-effect type=\\\"unbounded\\\"></ion-ripple-effect>\\n      Browse\\n    </ion-button>\\n    <ion-button\\n      class=\\\"btn-middle\\\"\\n      [ngClass]=\\\"{'btn-activated': activated == 'booked'}\\\"\\n      (click)=\\\"showBooked()\\\">\\n      <ion-ripple-effect type=\\\"unbounded\\\"></ion-ripple-effect>\\n      Booked\\n    </ion-button>\\n    <ion-button\\n      class=\\\"btn-right-half\\\"\\n      [ngClass]=\\\"{'btn-activated': activated == 'attended'}\\\"\\n      (click)=\\\"showAttended()\\\">\\n      <ion-ripple-effect type=\\\"unbounded\\\"></ion-ripple-effect>\\n      Attended\\n    </ion-button>\\n  </div>\\n\\n  <ion-item lines=\\\"none\\\" color=\\\"light\\\" class=\\\"ion-margin-top item-filter\\\">\\n    <ion-label id=\\\"activity-filter\\\" class=\\\"subtitle-1\\\" [ngClass]=\\\"!events.length ? 'gray-0' : 'gray-2'\\\">Filter by Activity</ion-label>\\n    <ion-select\\n      multiple=\\\"true\\\"\\n      aria-labelledby=\\\"activity-filter\\\"\\n      [value]=\\\"selectedActivities\\\"\\n      (ionChange)=\\\"onSelect(filterEle.value)\\\"\\n      #filterEle>\\n      <ion-select-option *ngFor=\\\"let activity of activities\\\" [value]=\\\"activity.id\\\" selected>{{ activity.name }}</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n\\n  <ng-container *ngIf=\\\"loadingEvents\\\">\\n    <p><ion-skeleton-text animated style=\\\"width: 40%\\\"></ion-skeleton-text></p>\\n    <ion-card class=\\\"practera-card\\\">\\n      <ion-list>\\n        <app-list-item loading=\\\"true\\\"></app-list-item>\\n        <app-list-item loading=\\\"true\\\" lines=\\\"none\\\"></app-list-item>\\n      </ion-list>\\n    </ion-card>\\n  </ng-container>\\n\\n  <ng-container *ngFor=\\\"let eventObj of events\\\">\\n    <p class=\\\"sutitle-2 gray-2 ion-text-left\\\">{{ eventObj.date }}</p>\\n    <ion-card class=\\\"practera-card\\\">\\n      <ion-list>\\n        <app-list-item\\n          *ngFor=\\\"let event of eventObj.events; let i = index\\\"\\n          leadingIcon=\\\"calendar-outline\\\"\\n          [leadingIconColor]=\\\"eventListService.isNotActionable(event) ? 'medium' : 'primary'\\\"\\n          [title]=\\\"event.name\\\"\\n          [titleColor]=\\\"eventListService.isNotActionable(event) ? 'gray-2' : ''\\\"\\n          [subtitle1]=\\\"event.activityName\\\"\\n          [subtitle2]=\\\"eventListService.timeDisplayed(event)\\\"\\n          [endingIcon]=\\\"!eventListService.isNotActionable(event) ? 'arrow-forward' : ''\\\"\\n          [eventExpired]=\\\"event.isPast && !event.isBooked\\\"\\n          [active]=\\\"eventId === event.id\\\"\\n          [lines]=\\\"i == eventObj.events.length - 1 ? 'none' : ''\\\"\\n          (click)=\\\"goto(event)\\\"\\n        ></app-list-item>\\n      </ion-list>\\n    </ion-card>\\n  </ng-container>\\n\\n  <ion-infinite-scroll threshold=\\\"50px\\\" (ionInfinite)=\\\"loadMoreEvents($event)\\\">\\n    <ion-infinite-scroll-content\\n      loadingSpinner=\\\"bubbles\\\"\\n      loadingText=\\\"Loading more events...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n\\n  <div *ngIf=\\\"!events.length && !loadingEvents\\\">\\n    <ion-card class=\\\"practera-card list-empty-message\\\">\\n      <ng-container [ngSwitch]=\\\"activated\\\">\\n        <ng-container *ngSwitchCase=\\\"'browse'\\\">\\n          <p class=\\\"subtitle-1 gray-3\\\">There's no new events.</p>\\n          <span class=\\\"gray-1 body-2\\\">Go to the booked tab to see the events you've booked.</span>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"'booked'\\\">\\n          <p class=\\\"subtitle-1 gray-3\\\">You have no booked events.</p>\\n          <span class=\\\"gray-1 body-2\\\">Go to the browse tab and book an event to see it here.</span>\\n        </ng-container>\\n        <ng-container *ngSwitchCase=\\\"'attended'\\\">\\n          <p class=\\\"subtitle-1 gray-3\\\">You have not attended any events.</p>\\n          <span class=\\\"gray-1 body-2\\\">You can see all your past events in this tab.</span>\\n        </ng-container>\\n      </ng-container>\\n    </ion-card>\\n  </div>\\n\\n</ion-content>\\n\"","export default \"<ion-split-pane *ngIf=\\\"!utils.isMobile()\\\" contentId=\\\"main-events\\\" when=\\\"xs\\\">\\n  <app-event-list\\n    #eventList\\n    style=\\\"display: flex\\\"\\n    [activityId]=\\\"activityId\\\"\\n    [eventId]=\\\"eventId\\\"\\n    (navigate)=\\\"goto($event)\\\"\\n  ></app-event-list>\\n  <ion-content color=\\\"light\\\" id=\\\"main-events\\\">\\n    <app-event-detail\\n      #eventDetail\\n      *ngIf=\\\"!assessmentId && currentEvent\\\"\\n      [event]=\\\"currentEvent\\\"\\n      (checkin)=\\\"checkin($event)\\\"\\n    ></app-event-detail>\\n    <app-assessment\\n      #assessment\\n      *ngIf=\\\"assessmentId\\\"\\n      [inputId]=\\\"assessmentId\\\"\\n      [inputContextId]=\\\"contextId\\\"\\n      [inputAction]=\\\"'assessment'\\\"\\n      [fromPage]=\\\"'events'\\\"\\n      (navigate)=\\\"assessmentId = null;eventList.onEnter()\\\"\\n    ></app-assessment>\\n    <ng-container *ngIf=\\\"!currentEvent\\\">\\n      <ion-header mode=\\\"ios\\\">\\n        <ion-toolbar class=\\\"ion-toolbar-absolute\\\">\\n          <ion-title class=\\\"ion-text-center title-small\\\">Event</ion-title>\\n        </ion-toolbar>\\n      </ion-header>\\n      <ion-content color=\\\"light\\\" class=\\\"ion-text-center ion-content-absolute\\\">\\n        <ion-icon id=\\\"calendar-icon\\\" name=\\\"calendar-outline\\\" color=\\\"medium\\\"></ion-icon>\\n      </ion-content>\\n    </ng-container>\\n  </ion-content>\\n</ion-split-pane>\\n\\n<ion-content *ngIf=\\\"utils.isMobile()\\\">\\n  <app-event-list #eventList [activityId]=\\\"activityId\\\"></app-event-list>\\n</ion-content>\\n\"","export default \".item-filter {\\n  --padding-start: 0;\\n  --inner-padding-end: 0;\\n}\\n\\n.btn-filter ion-button {\\n  width: 32%;\\n}\\n\\n.btn-filter .btn-middle {\\n  width: calc(36% - 4px);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9ldmVudC1saXN0L2V2ZW50LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2V2ZW50LWxpc3QvZXZlbnQtbGlzdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0Esc0JBQUE7QUNDRjs7QURFRTtFQUNFLFVBQUE7QUNDSjs7QURDRTtFQUNFLHNCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9ldmVudC1saXN0L2V2ZW50LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaXRlbS1maWx0ZXIge1xuICAtLXBhZGRpbmctc3RhcnQ6IDA7XG4gIC0taW5uZXItcGFkZGluZy1lbmQ6IDA7XG59XG4uYnRuLWZpbHRlciB7XG4gIGlvbi1idXR0b24ge1xuICAgIHdpZHRoOiAzMiU7XG4gIH1cbiAgLmJ0bi1taWRkbGUge1xuICAgIHdpZHRoOiBjYWxjKDM2JSAtIDRweCk7XG4gIH1cbn1cblxuIiwiLml0ZW0tZmlsdGVyIHtcbiAgLS1wYWRkaW5nLXN0YXJ0OiAwO1xuICAtLWlubmVyLXBhZGRpbmctZW5kOiAwO1xufVxuXG4uYnRuLWZpbHRlciBpb24tYnV0dG9uIHtcbiAgd2lkdGg6IDMyJTtcbn1cbi5idG4tZmlsdGVyIC5idG4tbWlkZGxlIHtcbiAgd2lkdGg6IGNhbGMoMzYlIC0gNHB4KTtcbn0iXX0= */\"","import { Component, Input, NgZone, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EventListService, Event, EventGroup, Activity } from './event-list.service';\nimport { UtilsService } from '@services/utils.service';\nimport { NewRelicService } from '@shared/new-relic/new-relic.service';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: 'event-list.component.html',\n  styleUrls: ['event-list.component.scss']\n})\n\nexport class EventListComponent {\n  @Output() navigate = new EventEmitter();\n  // activity id that is filtered by default\n  @Input() activityId;\n  // if eventId has value, hightlight this event\n  @Input() eventId;\n  // the current active tab\n  activated = 'browse';\n  events: Array<EventGroup> = [];\n  remainingEvents: Array<EventGroup> = [];\n  eventsCategorised: {\n    browse: Array<EventGroup>;\n    booked: Array<EventGroup>;\n    attended: Array<EventGroup>;\n  };\n  activities: Array<Activity>;\n  // events will be filtered by these activities\n  selectedActivities: Array<number>;\n  loadingEvents = true;\n  goToFirstEvent = true;\n\n  constructor (\n    public router: Router,\n    private route: ActivatedRoute,\n    public eventListService: EventListService,\n    public utils: UtilsService,\n    private ngZone: NgZone,\n    private newRelic: NewRelicService\n  ) {\n    // update event list after book/cancel an event\n    this.utils.getEvent('update-event').subscribe(event => {\n      this.onEnter();\n    });\n  }\n\n  private _initialise() {\n    this.events = [];\n    this.remainingEvents = [];\n    this.eventsCategorised = {\n      browse: [],\n      booked: [],\n      attended: []\n    };\n    this.activities = [];\n    this.selectedActivities = [];\n    this.loadingEvents = true;\n    this.activated = 'browse';\n  }\n\n  onEnter() {\n    this.newRelic.setPageViewName('event-list');\n    this._initialise();\n    this.eventListService.getEvents().subscribe(events => {\n      if (this.utils.isEmpty(events)) {\n        this.loadingEvents = false;\n        return;\n      }\n      // initialise the date to compare with\n      let compareDateBrowse = '';\n      let compareDateBooked = '';\n      let compareDateAttended = '';\n      // initialise the event object\n      let eventGroupBrowse = {\n        date: compareDateBrowse,\n        events: []\n      };\n      let eventGroupBooked = {\n        date: compareDateBooked,\n        events: []\n      };\n      let eventGroupAttended = {\n        date: compareDateAttended,\n        events: []\n      };\n      const activityIdsWithEvent = [];\n      events.forEach(event => {\n        // record the id of activity that has event, so that we can filter the activity list later\n        if (!activityIdsWithEvent.includes(event.activityId)) {\n          activityIdsWithEvent.push(event.activityId);\n        }\n        if (!event.isBooked) {\n          // group event for 'browse' type\n          [this.eventsCategorised.browse, eventGroupBrowse, compareDateBrowse] = this._groupEvents(event, this.eventsCategorised.browse, eventGroupBrowse, compareDateBrowse, true);\n          // if eventId is passed in, go to the tab that contains this event and highlight it\n          if (this.eventId === event.id) {\n            this.activated = 'browse';\n            this.goto(event);\n          }\n        } else if (this.utils.timeComparer(event.startTime) >= 0) {\n          // group event for 'booked' type\n          [this.eventsCategorised.booked, eventGroupBooked, compareDateBooked] = this._groupEvents(event, this.eventsCategorised.booked, eventGroupBooked, compareDateBooked);\n          // if eventId is passed in, go to the tab that contains this event and highlight it\n          if (this.eventId === event.id) {\n            this.activated = 'booked';\n            this.goto(event);\n          }\n        } else {\n          // group event for 'attended' type\n          [this.eventsCategorised.attended, eventGroupAttended, compareDateAttended] = this._groupEvents(event, this.eventsCategorised.attended, eventGroupAttended, compareDateAttended);\n          // if eventId is passed in, go to the tab that contains this event and highlight it\n          if (this.eventId === event.id) {\n            this.activated = 'attended';\n            this.goto(event);\n          }\n        }\n      });\n      if (eventGroupBrowse.events.length) {\n        this.eventsCategorised.browse.push(eventGroupBrowse);\n      }\n      if (eventGroupBooked.events.length) {\n        this.eventsCategorised.booked.push(eventGroupBooked);\n      }\n      if (eventGroupAttended.events.length) {\n        this.eventsCategorised.attended.push(eventGroupAttended);\n      }\n      this.renderEvents(this.eventsCategorised[this.activated]);\n      // if activity id is passed in, filter by that activity\n      let activityId = this.activityId;\n      if (!activityId) {\n        activityId = +this.route.snapshot.paramMap.get('activity_id');\n      }\n      // don't need to go to first event if event id passed in\n      if (this.eventId) {\n        this.goToFirstEvent = false;\n      }\n      if (activityId) {\n        this.onSelect([activityId]);\n      } else {\n        this._rearrangeEvents();\n      }\n      this.loadingEvents = false;\n      // get activity list\n      this.eventListService.getActivities().subscribe(activities => {\n        // only display activity that has event\n        this.activities = activities.filter(activity => activityIdsWithEvent.includes(activity.id));\n      });\n    });\n  }\n\n  // render more events from remainingEvents\n  loadMoreEvents(event) {\n    setTimeout(\n      () => {\n        this.renderEvents();\n        event.target.complete();\n      },\n      500\n    );\n  }\n\n  /**\n   * Render 7 events at one time.\n   * If one event group doesn't have 7 events, will render the next event group until 7 events or all rendered\n   *\n   * @param remainingEvents Pass the remaining event groups if we need to reset the event list\n   */\n  renderEvents(remainingEvents?) {\n    if (!this.events) {\n      this.events = [];\n    }\n    // re-assign remainingEvents if passed in\n    if (remainingEvents) {\n      this.remainingEvents = JSON.parse(JSON.stringify(remainingEvents));\n      this.events = [];\n    }\n    // don't need to do anything if no remaining events\n    if (!this.remainingEvents) {\n      return ;\n    }\n    let eventsCount = 0, eventGroup;\n    const maxEvents = 7;\n    while (eventsCount < maxEvents) {\n      // stop if there's no remaining events\n      if (!this.remainingEvents.length) {\n        break;\n      }\n      eventGroup = this.remainingEvents[0];\n      if (eventsCount + eventGroup.events.length <= maxEvents) {\n        // render the whole event group if no more than max events yet\n        this.remainingEvents.shift();\n        eventsCount += eventGroup.events.length;\n      } else {\n        eventGroup = {\n          date: this.remainingEvents[0].date,\n          events: this.remainingEvents[0].events.splice(0, maxEvents - eventsCount)\n        };\n        eventsCount = maxEvents;\n      }\n\n      if (this.events.length && this.events[this.events.length - 1].date === eventGroup.date) {\n        // concat the new event group to the last one\n        this.events[this.events.length - 1].events = this.events[this.events.length - 1].events.concat(eventGroup.events);\n      } else {\n        // push the new event group\n        this.events.push(eventGroup);\n      }\n    }\n  }\n\n  // tell parent component that user is going to an event\n  goto(event) {\n    // pop up event detail for mobile\n    if (this.utils.isMobile()) {\n      return this.eventListService.eventDetailPopUp(event);\n    }\n    // goto an event for desktop view\n    return this.navigate.emit(event);\n  }\n\n  /**\n   * This function is used to put events into the proper group\n   *\n   * @param {Event} event          The event data\n   * @param {Array} events         The events array to push group data to\n   * @param {Array} eventGroup     The event group array\n   * @param {String} compareDate   The compare date string\n   * @param {Boolean} isBrowse     If this is for browse (will group all past events in \"Expired\")\n   */\n  private _groupEvents(event, events, eventGroup, compareDate, isBrowse = false) {\n    const date = this.utils.utcToLocal(event.startTime, 'date');\n    // initialise compareDate & eventGroup\n    if (!compareDate) {\n      compareDate = date;\n      eventGroup = {\n        date: compareDate,\n        events: []\n      };\n    }\n\n    /**\n     * Frontend Expiry status is recalculated from event.start date\n     * (API doesn't return explicit conditions to FE to evaluate booking timeframe)\n     * - we are checking against the event start time to check if it is expired\n     * - if event started and user haven't booked, it is expired\n     * - if event started and user has booked, it is in attended\n     * - if event haven't started, it's bookable\n     */\n    if (isBrowse && this.utils.timeComparer(event.startTime) < 0) {\n      // group all past events as one group named \"Expired\"\n      if (compareDate !== 'Expired') {\n        compareDate = 'Expired';\n        if (!this.utils.isEmpty(eventGroup.events)) {\n          events.push(eventGroup);\n        }\n        eventGroup = {\n          date: compareDate,\n          events: []\n        };\n      }\n      eventGroup.events.push(event);\n    } else if (date === compareDate) {\n      // this event belongs to the same group as previous one\n      eventGroup.events.push(event);\n    } else {\n      // create a new group for this date\n      if (!this.utils.isEmpty(eventGroup.events)) {\n        events.push(eventGroup);\n      }\n      compareDate = this.utils.utcToLocal(event.startTime, 'date');\n      eventGroup = {\n        date: compareDate,\n        events: [event]\n      };\n    }\n    return [events, eventGroup, compareDate];\n  }\n\n\n  showBrowse() {\n    this.newRelic.addPageAction('show browse');\n    this.activated = 'browse';\n    this.goToFirstEvent = true;\n    this._rearrangeEvents();\n  }\n  showBooked() {\n    this.newRelic.addPageAction('show booked');\n    this.activated = 'booked';\n    this.goToFirstEvent = true;\n    this._rearrangeEvents();\n  }\n  showAttended() {\n    this.newRelic.addPageAction('show attended');\n    this.activated = 'attended';\n    this.goToFirstEvent = true;\n    this._rearrangeEvents();\n  }\n\n  onSelect(value) {\n    this.selectedActivities = value;\n    this._rearrangeEvents();\n  }\n\n  /**\n   * Rearrange current events.\n   * Including:\n   * 1. filter the events by selected activities\n   * 2. go to the first event after filter\n   */\n  private _rearrangeEvents() {\n    this._filterByActivities();\n    // don't need to go to first event if it is the inital loading and event id is passed in or it is on mobile mode\n    if (!this.goToFirstEvent || this.utils.isMobile()) {\n      return ;\n    }\n    // Go to the first event.\n    // Highlight the event in event list and display the content in event detail\n    if (this.events.length) {\n      this.goto(this.events[0].events[0]);\n    } else {\n      this.goto(null);\n    }\n  }\n\n  /**\n   * Filter the current events with selected activities\n   */\n  private _filterByActivities() {\n    // no need to filter any activity if not selected\n    if (this.utils.isEmpty(this.selectedActivities)) {\n      this.renderEvents(this.eventsCategorised[this.activated]);\n      return ;\n    }\n    const events = [];\n    this.eventsCategorised[this.activated].forEach(eventGroup => {\n      const group: EventGroup = {\n        date: eventGroup.date,\n        events: []\n      };\n      eventGroup.events.forEach(event => {\n        if (this.selectedActivities.includes(event.activityId)) {\n          group.events.push(event);\n        }\n      });\n      if (!this.utils.isEmpty(group.events)) {\n        events.push(group);\n      }\n    });\n    this.renderEvents(events);\n  }\n}\n","import { SharedModule } from '@shared/shared.module';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { EventListComponent } from './event-list.component';\nimport { EventListService } from './event-list.service';\n\n@NgModule({\n  imports: [\n    SharedModule,\n  ],\n  declarations: [\n    EventListComponent\n  ],\n  providers: [\n    EventListService\n  ],\n  exports: [\n    EventListComponent\n  ]\n})\n\nexport class EventListModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  template: '<ion-router-outlet></ion-router-outlet>'\n})\nexport class EventsRoutingComponent {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventsRoutingComponent } from './events-routing.component';\nimport { EventsComponent } from './events.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventsRoutingComponent,\n    children: [\n      {\n        path: '',\n        component: EventsComponent\n      }\n    ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EventsRoutingModule { }\n","export default \"#calendar-icon {\\n  font-size: 200px;\\n  margin-top: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9jaGF3L1dvcmtzcGFjZXMvd3d3L2ludGVyc2VjdGl2ZS9wcmFjdGVyYS1hcHAtdjIvc3JjL2FwcC9ldmVudHMvZXZlbnRzLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9ldmVudHMvZXZlbnRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7RUFDQSxlQUFBO0FDQ0YiLCJmaWxlIjoic3JjL2FwcC9ldmVudHMvZXZlbnRzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI2NhbGVuZGFyLWljb24ge1xuICBmb250LXNpemU6IDIwMHB4O1xuICBtYXJnaW4tdG9wOiAyMCU7XG59XG4iLCIjY2FsZW5kYXItaWNvbiB7XG4gIGZvbnQtc2l6ZTogMjAwcHg7XG4gIG1hcmdpbi10b3A6IDIwJTtcbn0iXX0= */\"","import { Component, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UtilsService } from '@services/utils.service';\nimport { RouterEnter } from '@services/router-enter.service';\nimport { Event, EventGroup } from '@app/event-list/event-list.service';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.scss']\n})\nexport class EventsComponent extends RouterEnter {\n  // used in RouteEnter to trigger onEnter() of this component\n  routeUrl = '/app/events';\n  // activity id from the route\n  activityId: number;\n  // Event id. Used to highlight the event in the list\n  eventId: number;\n  // The object of current event. Used to display the event detail\n  currentEvent: Event;\n  // check-in assessment id. If null, don't display assessment component\n  assessmentId: number;\n  // check-in assessment context id.\n  contextId: number;\n  // event list component\n  @ViewChild('eventList') eventList;\n  // event detail component\n  @ViewChild('eventDetail') eventDetail;\n  // assessment component\n  @ViewChild('assessment') assessment;\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    public utils: UtilsService\n  ) {\n    super(router);\n  }\n\n  onEnter() {\n    // get activity and event id from route\n    this.activityId = +this.route.snapshot.paramMap.get('activity_id');\n    this.eventId = +this.route.snapshot.paramMap.get('event_id');\n    // don't display assessment component by default\n    this.assessmentId = null;\n    this.currentEvent = null;\n    // trigger eventList onEnter() after the element gets generated\n    setTimeout(() => {\n      this.eventList.onEnter();\n    });\n  }\n\n  // display the event content in the right pane, and highlight it on the left pane\n  goto(event) {\n    this.currentEvent = event;\n    this.eventId = event ? event.id : 0;\n    // not displaying the check-in assessment\n    this.assessmentId = null;\n    this.contextId = null;\n  }\n\n  checkin(params: {assessmentId: number; contextId: number}) {\n    if (!params.assessmentId || !params.contextId) {\n      return ;\n    }\n    this.assessmentId = params.assessmentId;\n    this.contextId = params.contextId;\n    // trigger assessment onEnter() after the element gets generated\n    setTimeout(() => {\n      this.assessment.onEnter();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { EventsRoutingComponent } from './events-routing.component';\nimport { EventsRoutingModule } from './events-routing.module';\nimport { EventsComponent } from './events.component';\nimport { EventListModule } from '../event-list/event-list.module';\nimport { EventDetailModule } from '../event-detail/event-detail.module';\nimport { AssessmentModule } from '../assessment/assessment.module';\n\n@NgModule({\n  declarations: [\n    EventsComponent,\n    EventsRoutingComponent\n  ],\n  imports: [\n    SharedModule,\n    EventsRoutingModule,\n    EventListModule,\n    EventDetailModule,\n    AssessmentModule\n  ]\n})\nexport class EventsModule { }\n"],"sourceRoot":"webpack:///"}