{"version":3,"sources":["./src/app/tasks/tasks.component.html","./src/app/tasks/tasks-routing.component.ts","./src/app/tasks/tasks-routing.module.ts","./src/app/tasks/tasks.component.scss","./src/app/tasks/tasks.component.ts","./src/app/tasks/tasks.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,8jBAA+f,kXAAkX,6S;;;;;;;;;;;;;;;;;;;;;;;;ACAt1B;AAK1C;IAAA;IAAoC,CAAC;IAAxB,qBAAqB;QAHjC,+DAAS,CAAC;YACT,QAAQ,EAAE,yCAAyC;SACpD,CAAC;OACW,qBAAqB,CAAG;IAAD,4BAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLO;AACc;AACW;AACf;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,8EAAqB;QAChC,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,KAAK;gBACX,SAAS,EAAE,+DAAc;aAC1B;SACF;KACF;CACF,CAAC;AAKF;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACrB/B;AAAe,6GAA8C,2I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAR;AACc;AACZ;AACM;AACK;AAOlE;IAAoC,kCAAW;IAS7C,wBACS,MAAc,EACb,KAAqB,EACtB,OAA8B,EAC9B,KAAmB;QAJ5B,YAME,kBAAM,MAAM,CAAC,SACd;QANQ,YAAM,GAAN,MAAM,CAAQ;QACb,WAAK,GAAL,KAAK,CAAgB;QACtB,aAAO,GAAP,OAAO,CAAuB;QAC9B,WAAK,GAAL,KAAK,CAAc;QAZ5B,cAAQ,GAAG,eAAe,CAAC;;IAe3B,CAAC;IAED,gCAAO,GAAP;QAAA,iBAQC;QAPC,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,kDAAkD;QAClD,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,sCAAa,GAAb,UAAc,KAAK;QAAnB,iBAoCC;QAnCC,wDAAwD;QACxD,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,YAAY,EAAE;YACrC,OAAQ;SACT;QACD,4CAA4C;QAC5C,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YACpB,OAAQ;SACT;QACD,yDAAyD;QACzD,yCAAyC;QACzC,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,cAAI;YAC7B,OAAO,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBACtD,IAAI,CAAC,IAAI,KAAK,QAAQ;gBACtB,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;gBACnD,CAAC,IAAI,CAAC,QAAQ,CAAC;QACnB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE;YACd,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACtB;QACD,sBAAsB;QACtB,QAAQ,SAAS,CAAC,IAAI,EAAE;YACtB,KAAK,OAAO;gBACV,IAAI,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,SAAS,CAAC,EAAE;iBACtB,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,YAAY;oBAClB,SAAS,EAAE,SAAS,CAAC,SAAS;oBAC9B,YAAY,EAAE,SAAS,CAAC,EAAE;iBAC3B,CAAC,CAAC;gBACH,MAAM;SACT;IACH,CAAC;IAED;;OAEG;IACK,kCAAS,GAAjB;QACE,gDAAgD;QAChD,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,KAAK,CAAC;SACd;QACD,IAAM,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,KAAK,CAAC;SACd;QACD,QAAQ,IAAI,EAAE;YACZ,KAAK,OAAO;gBACV,IAAI,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,OAAO;oBACb,OAAO,EAAE,MAAM;iBAChB,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,YAAY;gBACf,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;gBAClE,IAAI,CAAC,SAAS,EAAE;oBACd,OAAO,KAAK,CAAC;iBACd;gBACD,IAAI,CAAC,IAAI,CAAC;oBACR,IAAI,EAAE,YAAY;oBAClB,YAAY,EAAE,MAAM;oBACpB,SAAS,EAAE,SAAS;iBACrB,CAAC,CAAC;gBACH,MAAM;YACR;gBACE,OAAO,KAAK,CAAC;SAChB;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,6EAA6E;IAC7E,6BAAI,GAAJ,UAAK,KAAK;QAAV,iBAsBC;QArBC,QAAQ,KAAK,CAAC,IAAI,EAAE;YAClB,KAAK,OAAO;gBACV,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;gBAC7B,gCAAgC;gBAChC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,kDAAkD;gBAClD,UAAU,CAAC;oBACT,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;gBACH,MAAM;YACR,KAAK,YAAY;gBACf,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;gBACvC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;gBACjC,2BAA2B;gBAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,kDAAkD;gBAClD,UAAU,CAAC;oBACT,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;gBAC5B,CAAC,CAAC,CAAC;gBACH,MAAM;SACT;IACH,CAAC;IAED,kCAAkC;IAClC,oCAAW,GAAX;QACE,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;gBACL,EAAE,EAAE,IAAI,CAAC,OAAO;gBAChB,IAAI,EAAE,OAAO;aACd,CAAC;SACH;QACD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO;gBACL,EAAE,EAAE,IAAI,CAAC,YAAY;gBACrB,IAAI,EAAE,YAAY;aACnB,CAAC;SACH;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;gBAzIgB,sDAAM;gBACN,8DAAc;gBACb,+EAAqB;gBACvB,oEAAY;;IAPL;QAAtB,+DAAS,CAAC,UAAU,CAAC;;oDAAU;IACZ;QAAnB,+DAAS,CAAC,OAAO,CAAC;;iDAAO;IACD;QAAxB,+DAAS,CAAC,YAAY,CAAC;;sDAAY;IARzB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,6KAAqC;;SAEtC,CAAC;yCAWiB,sDAAM;YACN,8DAAc;YACb,+EAAqB;YACvB,oEAAY;OAbjB,cAAc,CAqJ1B;IAAD,qBAAC;CAAA,CArJmC,0EAAW,GAqJ9C;AArJ0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXc;AACY;AACa;AAEN;AACT;AACU;AACT;AACe;AAenE;IAAA;IAA2B,CAAC;IAAf,WAAW;QAbvB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,+DAAc;gBACd,8EAAqB;aACtB;YACD,OAAO,EAAE;gBACP,kEAAY;gBACZ,wEAAkB;gBAClB,wEAAc;gBACd,+DAAW;gBACX,8EAAgB;aACjB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ","file":"tasks-tasks-module.js","sourcesContent":["export default \"<ion-split-pane *ngIf=\\\"!utils.isMobile()\\\" contentId=\\\"main-tasks\\\" when=\\\"xs\\\">\\n  <app-activity\\n    #activity\\n    style=\\\"display: flex\\\"\\n    [id]=\\\"activityId\\\"\\n    [currentTask]=\\\"currentTask()\\\"\\n    (navigate)=\\\"goto($event)\\\"\\n    (tasksReady)=\\\"goToFirstTask($event)\\\"\\n  ></app-activity>\\n  <ion-content color=\\\"light\\\" id=\\\"main-tasks\\\">\\n    <app-topic\\n      #topic\\n      *ngIf=\\\"topicId\\\"\\n      [inputId]=\\\"topicId\\\"\\n      [inputActivityId]=\\\"activityId\\\"\\n      (navigate)=\\\"goto($event);activity.onEnter()\\\"\\n      (changeStatus)=\\\"activity.changeTaskStatus('Topic', $event, 'done')\\\"\\n    ></app-topic>\\n    <app-assessment\\n      #assessment\\n      *ngIf=\\\"assessmentId\\\"\\n      [inputId]=\\\"assessmentId\\\"\\n      [inputActivityId]=\\\"activityId\\\"\\n      [inputContextId]=\\\"contextId\\\"\\n      [inputAction]=\\\"'assessment'\\\"\\n      (navigate)=\\\"goto($event);activity.onEnter()\\\"\\n      (changeStatus)=\\\"activity.changeTaskStatus('Assessment', $event.id, $event.status)\\\"\\n      ></app-assessment>\\n  </ion-content>\\n</ion-split-pane>\\n\\n<ion-content *ngIf=\\\"utils.isMobile()\\\">\\n  <app-activity #activity [id]=\\\"activityId\\\"></app-activity>\\n</ion-content>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  template: '<ion-router-outlet></ion-router-outlet>'\n})\nexport class TasksRoutingComponent {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TasksRoutingComponent } from './tasks-routing.component';\nimport { TasksComponent } from './tasks.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TasksRoutingComponent,\n    children: [\n      {\n        path: ':id',\n        component: TasksComponent\n      }\n    ]\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { UtilsService } from '@services/utils.service';\nimport { RouterEnter } from '@services/router-enter.service';\nimport { BrowserStorageService } from '@services/storage.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent extends RouterEnter {\n  routeUrl = '/app/activity';\n  activityId: number;\n  topicId: number;\n  assessmentId: number;\n  contextId: number;\n  @ViewChild('activity') activity;\n  @ViewChild('topic') topic;\n  @ViewChild('assessment') assessment;\n  constructor(\n    public router: Router,\n    private route: ActivatedRoute,\n    public storage: BrowserStorageService,\n    public utils: UtilsService\n  ) {\n    super(router);\n  }\n\n  onEnter() {\n    this.activityId = +this.route.snapshot.paramMap.get('id');\n    this.topicId = null;\n    this.assessmentId = null;\n    // trigger onEnter after the element get generated\n    setTimeout(() => {\n      this.activity.onEnter();\n    });\n  }\n\n  /**\n   * Go to the specific task based on parameters\n   * Or go to the first unfinished task inside this activity\n   */\n  goToFirstTask(tasks) {\n    // only go to a task if we don't have a current task yet\n    if (this.topicId || this.assessmentId) {\n      return ;\n    }\n    // check if we need to go to a specific task\n    if (this._goToTask()) {\n      return ;\n    }\n    // find the first task that is not done or pending review\n    // and is allowed to access for this user\n    let firstTask = tasks.find(task => {\n      return !['done', 'pending review'].includes(task.status) &&\n        task.type !== 'Locked' &&\n        !(task.isForTeam && !this.storage.getUser().teamId) &&\n        !task.isLocked;\n    });\n    if (!firstTask) {\n      firstTask = tasks[0];\n    }\n    // goto the first task\n    switch (firstTask.type) {\n      case 'Topic':\n        this.goto({\n          type: 'topic',\n          topicId: firstTask.id\n        });\n        break;\n      case 'Assessment':\n        this.goto({\n          type: 'assessment',\n          contextId: firstTask.contextId,\n          assessmentId: firstTask.id\n        });\n        break;\n    }\n  }\n\n  /**\n   * If parameters are passed in, go to the specific task\n   */\n  private _goToTask() {\n    // go to a task directly if parameters passed in\n    const task = this.route.snapshot.paramMap.get('task');\n    if (!task) {\n      return false;\n    }\n    const taskId = +this.route.snapshot.paramMap.get('task_id');\n    if (!taskId) {\n      return false;\n    }\n    switch (task) {\n      case 'topic':\n        this.goto({\n          type: 'topic',\n          topicId: taskId\n        });\n        break;\n      case 'assessment':\n        const contextId = +this.route.snapshot.paramMap.get('context_id');\n        if (!contextId) {\n          return false;\n        }\n        this.goto({\n          type: 'assessment',\n          assessmentId: taskId,\n          contextId: contextId\n        });\n        break;\n      default:\n        return false;\n    }\n    return true;\n  }\n\n  // display the task content in the right pane, and highlight on the left pane\n  goto(event) {\n    switch (event.type) {\n      case 'topic':\n        this.topicId = event.topicId;\n        // hide the assessment component\n        this.assessmentId = null;\n        // trigger onEnter after the element get generated\n        setTimeout(() => {\n          this.topic.onEnter();\n        });\n        break;\n      case 'assessment':\n        this.assessmentId = event.assessmentId;\n        this.contextId = event.contextId;\n        // hide the topic component\n        this.topicId = null;\n        // trigger onEnter after the element get generated\n        setTimeout(() => {\n          this.assessment.onEnter();\n        });\n        break;\n    }\n  }\n\n  // get the currently selected task\n  currentTask() {\n    if (this.topicId) {\n      return {\n        id: this.topicId,\n        type: 'Topic'\n      };\n    }\n    if (this.assessmentId) {\n      return {\n        id: this.assessmentId,\n        type: 'Assessment'\n      };\n    }\n    return null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SharedModule } from '@shared/shared.module';\nimport { TasksRoutingComponent } from './tasks-routing.component';\n\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TasksComponent } from './tasks.component';\nimport { ActivityModule } from '../activity/activity.module';\nimport { TopicModule } from '../topic/topic.module';\nimport { AssessmentModule } from '../assessment/assessment.module';\n\n@NgModule({\n  declarations: [\n    TasksComponent,\n    TasksRoutingComponent\n  ],\n  imports: [\n    SharedModule,\n    TasksRoutingModule,\n    ActivityModule,\n    TopicModule,\n    AssessmentModule\n  ]\n})\nexport class TasksModule { }\n"],"sourceRoot":"webpack:///"}